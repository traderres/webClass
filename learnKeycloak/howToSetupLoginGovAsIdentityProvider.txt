How to Setup Login.gov as an Identity Provider
----------------------------------------------
Problem:  I want users to get redirected to Login.gov for identity
Solution:




References
----------
https://developers.login.gov/
https://developers.login.gov/saml/getting-started/
https://developers.login.gov/oidc/getting-started/
https://developers.login.gov/testing/
https://developers.login.gov/attributes/
https://www.keycloak.org/archive/downloads-22.0.1.html
https://github.com/keycloak/keycloak-quickstarts/tree/22.0.1


How to integrate with Login.gov
-------------------------------
 1. Your integration with Login.gov starts in the dashboard where you can register your app.
 2. Determine your application needs, like the level of proofing and user attributes that will be requested.
 3. Select between Open ID Connect (OIDC) or SAML implementation protocols.
 4. Configure your app in the dashboard and start testing! We have implementation guides and example apps to get you up and running quickly.
 5. When you are ready to go live our team will help you promote the application to production. We will check against our production checklist to ensure your application is ready for production from an administrative and technical standpoint.





Approach #1 / Use OpenID Connect
--------------------------------
 1. Setup a login.gov "Sandbox account"
    a. Go to https://dashboard.int.identitysandbox.gov/
    b. Select the "Sign-in" button to create a new account
       Anyone with a .gov or .mil email address may request an account
	c. Next to "Create your first team", press "Continue"

    d. In the "New Team" page
    	Name:   	SIT_WebApp_Team
    	Agency: 	Department of Defense
		Press "Create"

	e. Select Apps (on the top menubar)
	   *OR*
	   https://dashboard.int.identitysandbox.gov/service_providers

	f. Press "Create a new app"

	g. In the "New App" page
		Dashboard Configuration:  	Sandbox
		App name            		My SIT Web App  				  (does not matter)
		Friendly name:				SIT Web App  					  (displayed to users when logging in)
		Team:               		SIT_WebApp_Team
		Authentication Protocol:	OpenID Connect Private Key JWT    (preferred for web apps)
		Level of Service:			Identity verification permitted   (so the webapp will receive verified attributes)
		Default Auth Assurance Lvl	MFA Required, remember device disallowed (AAL2)

		Attribute bundle:  [check these] / Do not check SSN
			email
			x509_subject
			x509_presented
			first_name
			last_name
			dob
			address1
			address2
			city
			state
			zipcode
			phone

		Issuer:					urn:gov:gsa:openidconnect.profiles:sp:sso:<AGENCY_NAME>:<APP_NAME>
								Replace AGENCY_NAME with DCSA
								Replace APP_NAME    with sit_webapp
                                urn:gov:gsa:openidconnect.profiles:sp:sso:dcsa:sit_webapp

		Failure to Proof URL	https://www.google.com/

		Push notification URL:  <blank>

		Redirect URIs:          https://dev1.rbr-tech.us/cvf/

		Accessible:				Yes

		Press "Create app"


 2. In Keycloak, create a OpenID Connect Provider
    a. Select your realm
    b. On the left, choose "Identity providers"
    c. Click on "OpenID Connect v1.0"
    d. In the "Add OpenID Connect provider" page
			alias:  				oidc
			Display Name:   		oidc
			Discovery endpoint:		https://idp.int.identitysandbox.gov/.well-known/openid-configuration
									-- Wait for the keycloak page to resolve this url
			or

			Authorization URL:		https://idp.int.identitysandbox.gov/openid_connect/authorize
			Token URL:				https://idp.int.identitysandbox.gov/api/openid_connect/token
			Logout URL				https://idp.int.identitysandbox.gov/openid_connect/logout
			User Info URL:			https://idp.int.identitysandbox.gov/api/openid_connect/userinfo
			Issuer:					https://idp.int.identitysandbox.gov/
			Validate Signatures:	On
			Use JWKS URL:			On
			JWKS URL:				https://idp.int.identitysandbox.gov/api/openid_connect/certs
			Use PKCE:				Off

			Client authentication:	JWT signed with private key
			Client ID:              <ISSUER from the login.gov sandbox> / should look something like this:  urn:gov:gsa:openidconnect.profiles:sp:sso:dcsa:sit_webapp


			Client assertion signature algorithm:  RS256

	e. Change the Authorization URL from this:
	          https://idp.int.identitysandbox.gov/openid_connect/authorize
	   To this:
	          https://idp.int.identitysandbox.gov/openid_connect/authorize?acr_values=http://idmanagement.gov/ns/assurance/loa/1
			  *OR*
			  https://idp.int.identitysandbox.gov/openid_connect/authorize?acr_values=http://idmanagement.gov/ns/assurance/loa/3


			  If you set acr_values=http://idmanagement.gov/ns/assurance/loa/1, then the user is prompted to enter username/password and set a MFA token:

	          If you set acr_values=http://idmanagement.gov/ns/assurance/loa/3, then the user is prompted for this:
					  Let’s verify your identity for SIT Web App

					  SIT Web App needs to make sure you are you — not someone pretending to be you. Learn more about verifying your identity(opens new tab)
					  You’ll need to:

						  Have a driver’s license or state ID

						  Other forms of ID are not accepted. We’ll check that you are the person on your ID.
						  Enter your Social Security number

						  You will not need your physical SSN card.
						  Match to your phone number

						  We match your phone number with your personal information and send a one-time code to your phone.
						  Re-enter your Login.gov password

						  Your password saves and encrypts your personal information.


 3. Update login.gov cert with the certificate from realm settings
    a. Create a text file that has this in it:  called it keycloak.rs256.cert.txt
		-----BEGIN CERTIFICATE-----

		-----END CERTIFICATE-----

    b. Get the RS256 "SIG" cert
       Go to Realm Settings -> Keys
       Look for the line that has Algorithm=RS256 and Use=SIG
    c. On that row, press the "Certificate" button
    d. Copy that info into a text file

    e. Update the cert on your service provider
       1) Go to the login.gov page Service Providers
       		https://dashboard.int.identitysandbox.gov/service_providers

       2) Click on your service provider

       3) Scroll to the bottom and press "Edit"

       4) In the "Upload a new public cert"
          Press "Choose a cert file"
          Browse to your text file:  keycloak.rs256.cert.txt

       5) Press "Save"


 4. Tell Keycloak to not show the "Update Account Information" form after first login
    a. In Keycloak, go to Realm Settings -> General
    b. Click on the "User profile" tab
    c. Click on username -> 3 dots -> Edit
       Who can edit?  Uncheck everyone

    d. On the row that has "email" -> 3 dots -> Edit
       Required Field:  Off
       Press "Save"

    e. On the row that shows "firstName" -> 3 dots -> Edit
       Required Field:  Off
       Press "Save"

    f. On the row that shows "lastName" -> 3 dots -> Edit
       Required Field:  Off
       Press "Save"


 5. Tell Keycloak to bring the user attributes back from login.gov and load them into keycloak upon authorization
    a. In keycloak, go to MyRealm -> Identity Providers -> oidc -> "Settings" tab
    b. In the Oidc settings page, press 'Advanced"
    	    Scopes:   	openid email profile phone address

	c. In keycloak, go to MyRealm -> Identity Providers -> oidc -> "Mappers" tab

    d. In the "Mappers" page, press "Add mapper"
    	Name:  					phone
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					phone
		User Attribute Name 	<Custom> phone
		Press "Save"

    e. In the "Mappers" page, press "Add mapper"
    	Name:  					street address
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					address.street_address
		User Attribute Name 	<Custom> street_address
		Press "Save"

    f. In the "Mappers" page, press "Add mapper"
    	Name:  					city
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					address.locality
		User Attribute Name 	<Custom> locality
		Press "Save"

    g. In the "Mappers" page, press "Add mapper"
    	Name:  					state
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					address.region
		User Attribute Name 	<Custom> region
		Press "Save"

    h. In the "Mappers" page, press "Add mapper"
    	Name:  					zip
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					address.postal_code
		User Attribute Name 	<Custom> postal_code
		Press "Save"

    i. In the "Mappers" page, press "Add mapper"
    	Name:  					full address
    	Sync mode override:		inherit
		Mapper Type: 			Attribute importer
		Claim:					address.formatted
		User Attribute Name 	<Custom> formatted
		Press "Save"


 6. Allow administrators to write unmanaged attributes
    a. Realm -> Realm Settings -> General Tab
    	Unmanaged Attributes:  Enabled



--------------------------------------



 6. Create the phone and address attributes in the MyRealm -> Realm Settings -> User profile

 7. In MyRealm -> Client scopes
 	a. Set phone scope to "Default"
 	b. Set address cope to "Default"
    c. Client scopes -> Profile
       Click on Mappers tab
       Press "Add mapper" -> From predefined mappers

       Check phone number
       Check phone number verified

	   Press "Add"


 8. DID NOT WORK
    In MyRealm -> Realm Settings -> General Tab
          Unmanaged Attributes: Enabled

    In MyRealm -> Realm Settings -> User Profile


 9. Set clients -> app16-webapp -> client scopes
 	a. Change address to "Default"
 	b. change phone to "Default"

10. MyRealm -> Clients -> app16-webapp -> "Client scopes" tab -> app16-webapp-dedicated
    a. Press "Add mapper" -> By configuration
    b. Select User Attribute
	c. In the "Add mapper" page
		Mapper Type:  	User Attribute
		Name:		  	Phone
		User Attribute:	phone
		Token Claim Name: phone

		Add to ID token:  			On
		Add to access token: 		On
		Add to userinfo:  			On
		Add to token introspection: On
		Press "Save"






To add custom attributes in keycloak you need to do 3 things:
------------------------------------------------------------
 1) Add attributes to admin console
 2) Add claim mapping
 3) Access claims

The first one is explained pretty good here: https://www.keycloak.org/docs/latest/server_admin/index.html#user-attributes

Add claim mapping:

    Open the admin console of your realm.
    Go to Clients and open your client
    This only works for Settings > Access Type confidential or public (not bearer-only)
    Go to Mappers
    Create a mapping from your attribute to json
    Check "Add to ID token"

Access claims:
















Approach #2 / Use SAML
----------------------





Approach #3 / Use keycloak-login.gov-integration  (works for Keycloak 15)
-------------------------------------------------------------------------
This adds an Identity Provider called "login.gov"

I tried the pom.xml to use keycloak to version 22.0.1
-- Would not compile!!!!


