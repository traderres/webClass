Java Lesson:  Static & Final
----------------------------


Static Explained
-----------------
Static means the members "belong to the class"
Static means you do not need to create an instance to use the methods
Example:  MathUtils.add(5, 11);


Final Explained
---------------
 1. Final Primitive means it is a aconstant
 2. Final Object    means one-time initialization   (but we can still call the methods)
 3. Final Method    means you cannot override a method
 4. Final Class     means you cannot extend the class with inheritance


	Static vs Final
	---------------

		MattUtils mu1 = new MathUtils();
		mu1.setMode(10);

		mu1
			+------------------
			| mode = 10
			|
			| getMode()
			| setMode()
			--------------------




		MattUtils mu2 = new MathUtils();
		mu2.setMode(20);

		mu2
			+------------------
			| mode = 20
			|
			| getMode()
			| setMode()
			--------------------



		MathUtils.add(5, 11)			static method  "of the class"
											I don't have to call new
											I can just call it




		StringUtils.isBlank()   	// static method in the StringUtils class
		StringUtils.isNotBlank()	// static method



		// Call the static method
		Date myDate = DateUtilities.convertToDate("2020-03-01");


	Final primitive int = 27;


		final primitive is a constant.  If you try to change it, it will not compile


		final Object:       one-time initialization


		final method



        a. Static = one copy of the object / Member belongs to the a class itself / so you do not create an instance to use it / you don't have to call new to use it

        b. Final = donâ€™t change the object / one-time initialization  (close)
			Final primitize is a constant
			Final object is initialized once







