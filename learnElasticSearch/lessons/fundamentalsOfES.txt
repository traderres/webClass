Lesson:  ES Index Fundamentals
------------------------------

ElasticSearch was introduced in 2010

Advantages of ES
----------------
 1. Ultra fast search speed
 2. Its distributed model makes it scale out easily and efficiently
 3. Rich analytic functionality
 4. Easy to get started with
 5. Moving from prototypes to production is often not difficult



Typical ElasticSearch Uses
--------------------------
 1. ES is the primary back-end data-store
    - ES does not support transactions.

 2. ES is the secondary data-store (high speed searching cache)
    + Your SQL database gives you transaction support
    + Your ES data store give you high-speed searching
    - Requires some process to sync your SQL database with ES

 3. ES is the back-end for a Kibana instance
    - Use logStash or Apache Flume to feed ES.
    - Your Kibana queries the ES instance



ElasticSearch REST API
----------------------
ES has a Java API
ES has a REST API
JSON is sent to the REST API and
JSON object contains keys and values
JSON is easy for an application to parse and generate



ElasticSearch is *elastic*
--------------------------
It's clustered by default
You call it a cluster even if you run it on a single server
You can always add more servers to increase capacity and fault tolerance
You can remove servers from the cluster to reduce costs as well


Storing Data in ElasticSearch
-----------------------------
In SQL database,  data is stored as records or rows in a table
In ElasticSearch, data is stored as documents in an index
-- The concepts are similar
-- With database rows in a table, you have columns
-- With an ES document, you have keys and values

ES document is more flexible than a row because a document can be hierarchical
 + A single key can have a string value
 + A single key can have an array of of strings
 + A single key can have key-value pairs (sub-object)

The idea is to encourage you to keep all of the data that belongs to a logical entity in the *same* document

Think of ES as a NoSql data store with real-time search and analytics capabilities.
+ It's document-oriented
+ It's scalable by default

