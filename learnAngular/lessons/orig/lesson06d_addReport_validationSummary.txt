Lesson:  Validation Summary
---------------------------
Another approach to form validation is to show a *summary* of errors
if a user types-in an invalid field, set the invalid field to red
-- So, the user gets feedback
-- But, we have less HTML to work with (as we do not have <mat-error> tags)


Another approach for telling the user that required fields are invalid is to:
 A) Set the invalid form fields to a red color
 B) Remove the individual <mat-error> tags
 C) Show a summary of errors at the top or bottom of the page
 

Procedure
---------
 1. Change the date_container so that it has a padding-top of 8px
        .date_container {
          float: left;
          display: flex;
          align-items: center;
          padding-top: 8px;
        }

2. Change the style for the "Add Report" page so that all invalid field has a red color
   Change the style for the "Add Report" page so that all valid fields have a green color
   a. Go to the add-report.component.css file
   b. Add this to the add-report.component.css file
  
        .add_report_form input.ng-invalid.ng-touched {
          /* Set the background to red for the form fields that are invalid and were touched */
          background-color: #FA787E;
          color: white;
          padding: 4px;
        }

        .add_report_form select.ng-invalid.ng-touched {
          /* Set the background to red for the form fields that are invalid and were touched */
          background-color: #FA787E;
          color: white;
          padding: 4px;
        }

        .add_report_form mat-select.ng-invalid.ng-touched {
          /* Set the background to red for the form fields that are invalid and were touched */
          background-color: #FA787E;
          color: white;
          padding: 4px;
        }

        .add_report_form input.ng-valid.ng-touched {
          /* Set the background to green for the form fields that are valid and were touched */
          background-color: #78FA89;
          padding: 4px;
        }

        .add_report_form select.ng-valid.ng-touched {
          /* Set the background to green for the form fields that are valid and were touched */
          background-color: #78FA89;
          padding: 4px;
        }

        .add_report_form mat-select.ng-valid.ng-touched {
          /* Set the background to green for the form fields that are valid and were touched */
          background-color: #78FA89;
          padding: 4px;
        }


 3. Remove all of the <mat-error> tags from the add-report.component.html
    -- These are not needed now
    -- Instead, we will show the form fields as green and red
    
    
 4. Add the getAllValidationMessages() and getValidationMessages() methods to the add-report.component.ts
      private getValidationMessages(state: any, thingName?: string) {
        let thing: string = state.path || thingName;
        let messages: string[] = [];

        if (state.errors) {
          for (let errorName in state.errors) {
            switch (errorName) {
              case "required":
                  messages.push(`You must enter a ${thing}`);
                  break;
              case "minlength":
                  messages.push(`A ${thing} must be at least $(state.errors['minlength'].requiredLength} characters`);
                  break;
              case "pattern":
                  messages.push(`The ${thing} contains illegal characters`);
                  break;
            } // end switch
          } // end for
        } // end if

        return messages;
      }


      public getAllValidationMessages(aForm: NgForm): string[] {
        let messages: string[] = [];

        Object.keys(aForm.controls).forEach(key => {
          // Call getValidationMessage for every form control, adding them to the list of messages
          this.getValidationMessages(aForm.controls[key], key)
            .forEach(m => messages.push(m));
        });
        return messages;
      }
 
 
 5. Show all of the validation errors at the top
    Add this <div> right after the <form> is defined
      <div *ngIf="formSubmitted && form.invalid" class="bg-danger">
        <ul>
          <!-- Show Validation Errors -->
          <li *ngFor="let error of getAllValidationMessages(form)">
            {{error}}
          </li>
        </ul>
      </div>
  
  
 6. Activate the debugger 
    a. Pull Run -> Debug 'Full WebApp'
    b. Click on "Add Report"
    c. Click on "Save"
       -- You should see required fields in Red
       -- You should see a summary of all error messages at the top
       
 
 
