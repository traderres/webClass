Lesson:  How to Handle Errors using Async Pipe  (approach 2)
------------------------------------------------------------
Have one observable called state$ that holds *both* your data and your error info


In your TypeScript code
-----------------------
this.state$ = request.pipe(map(users => {users, error: null}), catchError(error => {users: null, error})).pipe(startWith({users: null, error: null}));


In your Template
-----------------
<ng-container *ngif="state$ | async as state">

	<div *ngif="!state.users && !state.error">
	   <!-- Data is loading -->
	   Loading users...
	</div>

	<div *ngif="state.error">
	  <!-- Error was raised -->
	  {{state.error}}
	</div>

	<ng-container *ngif="state.users">
	<div *ngfor="let user of state.users">
	  <!-- Data was loaded -->
	{{ user.name }}
	</div>
	</ng-container>

<ng-container>

