Lesson:  Use model-based form with the FormBuilder Service
----------------------------------------------------------
The FormBuilder lets youdefine validators for a control without having to create a separate class
+ Less code
+ You can still use the built-in validators or your own custom validators



Procedure
---------
 1. Create an add-report2 component
    unix> cd ~/intellijProjects/angularApp1/frontend
    unix> ng generate component reports/add-report2


 2. Add a route
    a. Edit app.module.ts

    b. Add this route:
          { path: 'page/addReport2',    component: AddReport2Component },


 3. Add "Add Report 2" to the navigation bar
    a. Edit navbar.component.html

    b. Add the button
          <!-- Add Report 2 -->
          <mat-list-item class="navItem" [routerLink]="'page/addReport2'" routerLinkActive="active">
            <a title="Add Report">Add Report 2</a>
            <div fxFlex fxLayoutAlign="end end">
              <a [routerLink]="'page/addReport2'" target="_blank">
                <i class="fas fa-external-link-alt navItemIcon" title="Open Add Report 2 in a new window"></i>
              </a>
            </div>
          </mat-list-item>


 4. Setup a basic add-report2.component.ts
    a. edit add-report2.component.ts

    b. Replace its contents with this:

        import { Component, OnInit } from '@angular/core';

        @Component({
          selector: 'app-add-report2',
          templateUrl: './add-report2.component.html',
          styleUrls: ['./add-report2.component.css']
        })
        export class AddReport2Component implements OnInit {


          constructor() { }

          ngOnInit() {
          }

          public reset() {
            console.log('user pressed reset');
          }

          public save() {
            console.log('User pressed save.');
          }
        }


 5. Setup a basic add-report2.component.html
    a. edit add-report2.component.html

    b. Replace its contents with this:
        <mat-card>
          <mat-card-title>Add a Report 2</mat-card-title>

          <mat-card-content>

            <mat-form-field>
              <mat-label>Enter Report Name</mat-label>

              <!-- Use the matInput for input fields inside <mat-form-field>...</mat-form-field> tags -->
              <input matInput type="text" name="report.name"/>
            </mat-form-field>
            <br/>

            <mat-form-field>
              <mat-label>Choose Source</mat-label>

              <mat-select name="report.source" >
                <mat-option [value]=null>-Select Source-</mat-option>
                <mat-option [value]=100>Israel</mat-option>
                <mat-option [value]=101>United Kingdom</mat-option>
                <mat-option [value]=102>USA</mat-option>
              </select>
            </mat-form-field>
            <br/>

            <mat-form-field>
              <mat-label>Choose Priority</mat-label>

              <!-- Single Select -->
              <mat-select name="report.priority" >
                <mat-option [value]=null>-Select Priority-</mat-option>
                <mat-option [value]=1>Low</mat-option>
                <mat-option [value]=2>Medium</mat-option>
                <mat-option [value]=3>High</mat-option>
                <mat-option [value]=4>Critical</mat-option>
              </mat-select>
            </mat-form-field>
            <br/>


            <mat-form-field>
              <mat-label>Choose Authors</mat-label>

              <!-- Multiple Select -->
              <mat-select multiple name="report.authors" >
                <mat-option [value]=10>Adam</mat-option>
                <mat-option [value]=11>Ben</mat-option>
                <mat-option [value]=12>Peter</mat-option>
                <mat-option [value]=13>Justin</mat-option>
              </mat-select>
            </mat-form-field>
            <br/>

            <!-- Use the pretty material design buttons -->
            <button type="button" (click)="reset()" style="margin-top: 20px" mat-raised-button>Reset</button>&nbsp;&nbsp;
            <button type="button" (click)="save()" mat-raised-button color="primary">Save</button>
          </mat-card-content>


        </mat-card>



 6. Setup the TypeScript class to use the FormBuilder for validation
    a. Edit add-report2.component.ts

    b. Change the constructor so that it injects the FormBuilder:

          constructor(private formBuilder: FormBuilder)
          { }


    c. Add a public myForm object:
          public myForm: FormGroup;

    d. Change the ngOnInit() to initialize the formBuilder

		  public ngOnInit() {

			this.myForm = this.formBuilder.group({
			  report_name: [null,
				[
				  Validators.required,
				  Validators.minLength(2),
				  Validators.maxLength(100)
				]],

			  source: ['', Validators.required],

			  priority:  ['', Validators.required],

			  authors:  ['', Validators.required]
			});

		  }


	e. Change the reset() and save() methods so that errors are highlighted/cleared

		  public reset() {
			console.log('user pressed reset');
			this.myForm.reset();
		  }

		  public save() {
			console.log('User pressed save.');

			// Mark all fields as touched so the user can see any errors
			this.myForm.markAllAsTouched();

			if (this.myForm.invalid) {
			  // User did not pass validation so stop here
			  return;
			}

			// User enter valid data
			console.log('Valid data:  report_name=' + this.myForm.controls.report_name.value);
		  }


 7. Setup the HTML to work with the FormBuilder
 	a. Edit add-report2.component.html

 	b. Add an opening and closing form tag after the mat-card-title
 	   NOTE:  The novalidate stops the browser from using built-in validation
 	          The autocomplete="off" stops the browser from offering popup options in textboxes

 		<form novalidate autocomplete="off" [formGroup]="myForm" >

 		</form>


 	c. For each form control
 		1) Remove the name=" "
 		2) Add formControlName="report_name"

 		The report_name textbox looks like this:
 			<input matInput type="text"  formControlName="report_name" />

		The source drop down looks like this:
			<mat-select formControlName="source">
			  <mat-option [value]=null>-Select Source-</mat-option>
			  <mat-option [value]=100>Israel</mat-option>
			  <mat-option [value]=101>United Kingdom</mat-option>
			  <mat-option [value]=102>USA</mat-option>
			</mat-select>

		The priority drop down looks like this:
			<mat-select formControlName="priority">
			  <mat-option [value]=null>-Select Priority-</mat-option>
			  <mat-option [value]=1>Low</mat-option>
			  <mat-option [value]=2>Medium</mat-option>
			  <mat-option [value]=3>High</mat-option>
			  <mat-option [value]=4>Critical</mat-option>
			</mat-select>

		The authors multiple select dropdown looks like this:
			<mat-select multiple formControlName="authors">
			  <mat-option [value]=10>Adam</mat-option>
			  <mat-option [value]=11>Ben</mat-option>
			  <mat-option [value]=12>Peter</mat-option>
			  <mat-option [value]=13>Justin</mat-option>
			</mat-select>
    
	d. Add the <mat-error> tags to each field
	     	<mat-error>
					Report Name is required
			</mat-error>
			
			<mat-error>
				  Source is required
			</mat-error>	

			<mat-error>
				  Authors are required
			</mat-error>
			
			
	When completed, the add-report2.component.html looks like this:

		<mat-card>
		  <mat-card-title>Add a Report 2</mat-card-title>

		  <form novalidate autocomplete="off" [formGroup]="myForm" >

			 <mat-card-content>

			  <mat-form-field>
				<mat-label>Enter Report Name</mat-label>

				<!-- Use the matInput for input fields inside <mat-form-field>...</mat-form-field> tags -->
				<input matInput type="text"  formControlName="report_name" />

				<mat-error>
					Report Name is required
				</mat-error>
			  </mat-form-field>
			  <br/>

			  <mat-form-field>
				<mat-label>Choose Source</mat-label>

				<!-- Use the matNativeControl for select and input fields inside <mat-form-field>...</mat-form-field> tags -->
				<mat-select formControlName="source">
				  <mat-option [value]=null>-Select Source-</mat-option>
				  <mat-option [value]=100>Israel</mat-option>
				  <mat-option [value]=101>United Kingdom</mat-option>
				  <mat-option [value]=102>USA</mat-option>
				</mat-select>

				<mat-error>
				  Source is required
				</mat-error>
			  </mat-form-field>
			  <br/>

			  <mat-form-field>
				<mat-label>Choose Priority</mat-label>

				<!-- Single Select -->
				<mat-select formControlName="priority">
				  <mat-option [value]=null>-Select Priority-</mat-option>
				  <mat-option [value]=1>Low</mat-option>
				  <mat-option [value]=2>Medium</mat-option>
				  <mat-option [value]=3>High</mat-option>
				  <mat-option [value]=4>Critical</mat-option>
				</mat-select>

				<mat-error>
				  Priority is required
				</mat-error>
			  </mat-form-field>
			  <br/>


			  <mat-form-field>
				<mat-label>Choose Authors</mat-label>

				<!-- Multiple Select -->
				<mat-select multiple formControlName="authors">
				  <mat-option [value]=10>Adam</mat-option>
				  <mat-option [value]=11>Ben</mat-option>
				  <mat-option [value]=12>Peter</mat-option>
				  <mat-option [value]=13>Justin</mat-option>
				</mat-select>

				<mat-error>
				  Authors are required
				</mat-error>
			  </mat-form-field>
			  <br/>

			  <!-- Use the pretty material design buttons -->
			  <button type="button" (click)="reset()" style="margin-top: 20px" mat-raised-button>Reset</button>&nbsp;&nbsp;
			  <button type="button" (click)="save()" mat-raised-button color="primary">Save</button>
			</mat-card-content>

		  </form>


		</mat-card>

		<pre>
		  myForm.valid={{this.myForm.valid}}
		  myForm.controls.report_name.errors={{this.myForm.controls?.report_name?.errors | json}}
		  myForm.controls.priority.errors={{this.myForm.controls?.priority?.errors | json}}
		  myForm.controls.source.errors={{this.myForm.controls?.source?.errors | json}}
		  myForm.controls.authors.errors={{this.myForm.controls?.authors?.errors | json}}
		</pre>


 8. Activate the debugger
    a. Enter a single-character textbox in the report_name textbox
       -- That should not be valid
    b. Press "Reset" should clear all error messages
