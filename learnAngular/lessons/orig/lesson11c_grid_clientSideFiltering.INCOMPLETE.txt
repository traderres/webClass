Lesson:  How to do Client Side Filtering with the Angular Grid
--------------------------------------------------------------
Client Side Grid Filtering means that the client filters the results (no rest calls are made)

Advantages
 + Works well with small data sizes (1000 records or fewer)
 + Does not require back-end changes

Disadvantages
 - Does not scale up:  As the number of records increases, client site filtering performs more poorly
 - Does not take advantage of your fastest asset:  Your high speed servers
 - If you have millions of records in your data store but you only show 50 records at a time, then it may not work for you
 
  

How to filter the grid based on:
 1) Textbox filtering          to filter a string
 2) Single dropdown filtering  to filter on one of several lookup values
 3) Multiple-option filtering  to filter on many look values
 4) Single Date Filtering      to filter on a single date field
 5) Multiple Date Filtering    to filter on a start- and end- date field
 

References
----------
https://www.ag-grid.com/javascript-grid-filter-provided-simple/



Procedure
---------
 1. Add sorting to all of the fields using the 'sortable: true' option
    a. Edit view-report.component.ts
	b. Change the columnDefs to this:
		  public columnDefs = [
			{field: 'id' ,        headerName: 'Id',           sortable: true},
			{field: 'name',       headerName: 'Report Name',  sortable: true},
			{field: 'priority',   headerName: 'Priority',     sortable: true},
			{field: 'start_date', headerName: 'Start Date',   sortable: true},
			{field: 'end_date',   headerName: 'End Date',     sortable: true}
		  ];
	
 
 2. Add text filtering to the name field
    a. Edit view-report.component.ts
	b. Change the columnDefs to this:
		  public columnDefs = [
			{field: 'id' ,        headerName: 'Id',           sortable: true},
			{field: 'name',       headerName: 'Report Name',  sortable: true, filter: true},
			{field: 'priority',   headerName: 'Priority',     sortable: true},
			{field: 'start_date', headerName: 'Start Date',   sortable: true},
			{field: 'end_date',   headerName: 'End Date',     sortable: true}
		  ];


 3. Add numeric filtering to the id field using agNumberColumnFilter
    a. Edit view-report.component.ts
	b. Change the columnDefs to this:
		  public columnDefs = [
			{field: 'id' ,        headerName: 'Id',           sortable: true, filter: 'agNumberColumnFilter'},
			{field: 'name',       headerName: 'Report Name',  sortable: true, filter: true},
			{field: 'priority',   headerName: 'Priority',     sortable: true},
			{field: 'start_date', headerName: 'Start Date',   sortable: true},
			{field: 'end_date',   headerName: 'End Date',     sortable: true}
		  ];
  
  
 4. Add date filtering to the id field using agNumberColumnFilter
    a. Edit view-report.component.ts

  
