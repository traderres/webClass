Lesson:  How to Deploy the RDA to a BDP
---------------------------------------



Procedure
---------
 1. Setup socks tunnel in putty
    NOTE:  We setup localhost:5000 as a proxy so that we can view RDA log files
	       It is crucial to be able to see the webapp log files
		   
    a. Startup putty
	   Session Name: Socks Tunnel
	   Host Name:    <IP address of the puppet master>
	   Port:         22

	b. Click on Connection -> SSH
	   Check "Don't start a shell or command at all"

	c. Click on Connection -> SSH -> Tunnels
	   Source port:  5000     (or any port open on your local box
	   Destination:  <leave it empty>
	   Select Dynamic
	   Select Auto
	   Press "Add"
	   -- You sohuld see D5000

	d. Click on Session
	   Press "Save"


 2. Setup an RDA tunnel in putty
    NOTE:  We use this tunnel to connect to the RDA Deployer site
    a. Startup putty
	   Session Name: RDA Deployer Tunnel
	   Host Name:    <IP address of the puppet master>
	   Port:         22

	b. Click on Connection -> SSH
	   Check "Don't start a shell or command at all"

	c. Click on Connection -> SSH -> Tunnels
	   Source port:  9998     (or any port open on your local box
	   Destination:  <ip address of rda deployer server>:9998
	   Select Local
	   Select Auto
	   Press "Add"
	   -- You sohuld see L9998 <ip address of rda deployer server:9998

	d. Click on Session
	   Press "Save"


 3. Startup the RDA tunnel
    a. Open putty
	b. Double-click on "RDA Deployer Tunnel"
       -- Enter a unix account username
	   -- Enter a unix account password


 4. **FIRST TIME ONLY**  Initialize the database
    ssh to the puppet master
	unix> go postgres_server
	unix> sudo -s
	unix> psql -Upostgres -hlocalhost
	unix> psql

		create database app1_db;
		create user app1_user with password 'secret';
		grant all privileges on database app1_db to app1_user;
		alter database app1_db     SET search_path=app1_db;
		alter role     app1_user   SET search_path=app1_db;
		\q


 5. Build the RDA
    unix> cd ~/intellijProjects/angularApp1
	unix> mvn clean package -PbuildRda -Pprod
	-- This will create the RDA deployer zip file
	-- Located here:  ~/intellijProjects/angularApp1/install-bdp/target/webapp.rda.zip


 6. Deploy RDA
	a. Open a browser
	b. Connect to https://localhost:9998/deployer
       -- You should see the RDA Deployer web page
	   -- Press Upload RDA
	   -- Browse to your webapp.rda.zip file
	c. Click on the RDA -> Deploy
       -- You should see App1 listed as "Stopped"
	   
	d. On the right-slide, App1 -> Start


 7. View the RDA log files
    In firefox, pull Edit / Preferences
	Go to Network Settings
	In the "Configure Proxy Access to the Internet"
	  Select "Manual proxy configuration"
	  SOCKS Host:  localhost
	  SOCKS port   5000
	  Check "Proxy DNS when using SOCKS v5
	  
    In the RDA page, click on App1 -> Run/Logs
    On the row that has status of RUNNING, click on the latest container url
    -- You should see an Apache Hadoop page
	-- Click on slider-service.log
	     -- This is the webapp logging
		 -- Verify that you see the "Webapp is up" message
		 
 

 8. Connect to your webapp
    a. Open a browser
	b. Import your BDP cert
	c. Go to https://<ip address of proxy server>/app1
	    -- You will be prompted for your bdp client.12 name



