Lesson:  How to Create 3 Mat-Cards and Change 3D effect on Hover
----------------------------------------------------------------

Problem:  I want to have 3 mat-cards (as buttons)
          I want the hovered-over mat-card to stand-out

NOTE:  After each step, try it out


Solution
--------
 1. Use angular-flex to create 3 divs:  left, center, and right
    a. Edit the welcome.component.html

    b. Add this to it

        <div fxFlex fxLayout="row" fxLayoutGap="0">


          <div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">
            <!-- Left Box -->
            Left
          </div>



          <div fxFlex  fxLayoutAlign="center center" style="border: 1px solid blue">
            <!-- Center Box -->
            Center

          </div>



          <div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
            <!-- Right Box -->
            Right
          </div>

        </div>


 2. Add mat-cards to each box with different 3d effects (by adjusting class="mat-elevation-z"
    a. Edit the welcome.component.html

    b. Replace the previous section with this

        <div fxFlex fxLayout="row" fxLayoutGap="0">

          <div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">
		  
            <!-- Left Card -->
            <mat-card class="mat-elevation-z1">
              Option 1
            </mat-card>
          </div>


          <div fxFlex  fxLayoutAlign="center center" style="border: 1px solid blue">
            <!-- Center Card -->

            <mat-card class="mat-elevation-z4">
              Option 2
            </mat-card>

          </div>


          <div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
            <!-- Right Card -->

            <mat-card class="mat-elevation-z8">
              Option 3
            </mat-card>

          </div>

        </div>


 3. Make the cards take the entire width of each angular flex div
    a. Edit welcome.component.css
	b. Add this to it:
		mat-card {
		  width: 100%;
		}


 4. Add a gap between the mat-cards
    a. Edit welcome.component.html
	b. Change the top div so that the fxLayoutGap="50px"
		<div fxFlex fxLayout="row" fxLayoutGap="50px">

    When finished, the html should look like this:
		<div fxFlex fxLayout="row" fxLayoutGap="50px">


		  <div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">
		  
			<!-- Left Card -->
			<mat-card class="mat-elevation-z1">
			  Option 1
			</mat-card>
		  </div>


		  <div fxFlex  fxLayoutAlign="center center" style="border: 1px solid blue">
		  
			<!-- Center Card -->
			<mat-card class="mat-elevation-z4">
			  Option 2
			</mat-card>

		  </div>



		  <div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
		  
			<!-- Right Card -->
			<mat-card class="mat-elevation-z8">
			  Option 3
			</mat-card>
			
		  </div>

		</div>

	
 5. Add space *around* the mat-cards left, top, and right edges
    a. Edit welcome.component.html
	b. Add a div around the existing html with margin-left, margin-right, and margin-top set
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">
			<!-- Existing HTML in between -->
		</div>


    When finished, the html should look like this:
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">
		
		  <div fxFlex fxLayout="row" fxLayoutGap="50px">

			<div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">
			  <!-- Left Card -->
			  <mat-card class="mat-elevation-z1">
				Option 1
			  </mat-card>
			</div>


			<div fxFlex  fxLayoutAlign="center center" style="border: 1px solid blue">
			  <!-- Center Card -->
			  <mat-card class="mat-elevation-z4">
				Option 2
			  </mat-card>

			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
			  <!-- Right Card -->
			  <mat-card class="mat-elevation-z8">
				Option 3
			  </mat-card>

			</div>

		  </div>

		</div>
	
	
 
 6. Add a hover-over effect (Approach 1 using 3 strings)
    a. Edit welcome.component.ts
	b. Add these 3 public variables:
		public cardBorder1: string = "mat-elevation-z1";
		public cardBorder2: string = "mat-elevation-z1";
		public cardBorder3: string = "mat-elevation-z1";
		
	c. Edit welcome.component.html
	
	d. Change the *FIRST* mat-card opening tag to this:
		  <!-- Left Card -->
		  <mat-card  [ngClass]="this.cardBorder1"
					 (mouseover)="this.cardBorder1='mat-elevation-z10'"
					 (mouseout)="this.cardBorder1='mat-elevation-z1'">
	
	e. Change the *SECOND* mat-card opening tag to this:
		  <!-- Center Card -->
		  <mat-card  [ngClass]="this.cardBorder2"
					 (mouseover)="this.cardBorder2='mat-elevation-z10'"
					 (mouseout)="this.cardBorder2='mat-elevation-z1'">	
  
    
	f. Change the *THIRD* mat-card opening tag to this:
		  <!-- Right Card -->
		  <mat-card  [ngClass]="this.cardBorder3"
					 (mouseover)="this.cardBorder3='mat-elevation-z10'"
					 (mouseout)="this.cardBorder3='mat-elevation-z1'">	


    When finished, the welcome.component.html looks like this:
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">
		  <div fxFlex fxLayout="row" fxLayoutGap="50px">


			<div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">

			  <!-- Left Card -->
			  <mat-card  [ngClass]="this.cardBorder1"
						 (mouseover)="this.cardBorder1='mat-elevation-z10'"
						 (mouseout)="this.cardBorder1='mat-elevation-z1'">
				Option 1
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid blue">

			  <!-- Center Card -->
			  <mat-card  [ngClass]="this.cardBorder2"
						 (mouseover)="this.cardBorder2='mat-elevation-z10'"
						 (mouseout)="this.cardBorder2='mat-elevation-z1'">
				Option 2
			  </mat-card>

			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">

			  <!-- Right Card -->
			  <mat-card  [ngClass]="this.cardBorder3"
						 (mouseover)="this.cardBorder3='mat-elevation-z10'"
						 (mouseout)="this.cardBorder3='mat-elevation-z1'">
				Option 3
			  </mat-card>

			</div>

		  </div>

		</div>


 7. Add a hover-over effect (Approach 2/using 3 booleans)
    a. Edit welcome.component.ts so that it has 3 public booleans:
		  public mouseOvered1: boolean = false;
		  public mouseOvered2: boolean = false;
		  public mouseOvered3: boolean = false;
	
    b. Edit welcome.component.html so that it checks the booleans to see if they apply
	   1) Change the *left* mat-card opening tag to this:
			  <!-- Left Card -->
			  <mat-card class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered1"
						(mouseover)="mouseOvered1=true"
						(mouseout)="mouseOvered1=false">
 
       2) Change the *center* mat-card opening tag to this:
			  <!-- Center Card -->
			  <mat-card  class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered2"
						 (mouseover)="mouseOvered2=true"
						 (mouseout)="mouseOvered2=false">	   
	   
	   3) Change the *right* mat-card opening tag to this:
			  <!-- Right Card -->
			  <mat-card class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered3"
						(mouseover)="mouseOvered3=true"
						(mouseout)="mouseOvered3=false">	   
	   
	   When completed, the welcome.component.html looks like this:
			<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">
			  <div fxFlex fxLayout="row" fxLayoutGap="50px">


				<div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">

				  <!-- Left Card -->
				  <mat-card class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered1"
							(mouseover)="mouseOvered1=true"
							(mouseout)="mouseOvered1=false">
					Option 1
				  </mat-card>
				</div>


				<div fxFlex fxLayoutAlign="center center" style="border: 1px solid blue">

				  <!-- Center Card -->
				  <mat-card  class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered2"
							 (mouseover)="mouseOvered2=true"
							 (mouseout)="mouseOvered2=false">
					Option 2
				  </mat-card>

				</div>


				<div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">

				  <!-- Right Card -->
				  <mat-card class="mat-elevation-z1" [class.mat-elevation-z10]="mouseOvered3"
							(mouseover)="mouseOvered3=true"
							(mouseout)="mouseOvered3=false">
					Option 3
				  </mat-card>

				</div>

			  </div>

			</div>

	   
	   
 8. Add a hover-over effect (Approach 3 using a directive)
    a. Create a directive 
	   unix> cd ~/intellijProjects/angularApp1/frontend
	   unix> ng g directive directives/hoverClass --skipTests
	   
	b. Edit directives/hover-class.directive.ts
	
	c. Replace its contents with this:
		import {Directive, ElementRef, HostListener, Input} from '@angular/core';

		@Directive({
		  selector: '[hover-class]'
		})
		export class HoverClassDirective {

		  constructor(public elementRef:ElementRef) { }
		  @Input('hover-class') hoverClass:any;


		  @HostListener('mouseenter') onMouseEnter() {
			this.elementRef.nativeElement.classList.add(this.hoverClass);
		  }

		  @HostListener('mouseleave') onMouseLeave() {
			this.elementRef.nativeElement.classList.remove(this.hoverClass);
		  }

		}
	
 	d. Apply the directive to the mat-cards
	   1) Edit welcome.component.html
	   2) Change all of the opening mat-card tags to this:
	        <mat-card class="mat-elevation-z1" hover-class="mat-elevation-z10">
			

    When finished, the welcome.component.html looks like this:
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">
		  <div fxFlex fxLayout="row" fxLayoutGap="50px">


			<div fxFlex fxLayoutAlign="center center"  fxLayoutGap="0" style="border: 1px solid black">
			  <!-- Left Card -->
			  <mat-card class="mat-elevation-z1" hover-class="mat-elevation-z10">
				Option 1
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid blue">
			  <!-- Center Card -->
			  <mat-card class="mat-elevation-z1" hover-class="mat-elevation-z10">
				Option 2
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
			  <!-- Right Card -->
			  <mat-card class="mat-elevation-z1" hover-class="mat-elevation-z10">
				Option 3
			  </mat-card>
			</div>

		  </div>

		</div>


 9. Change the mat-cards so that the cursor changes to a pointer when the user mouses over
    a. Verify that you have the clickable class in your styles.css
		.clickable {
		  cursor: pointer;
		}
		
	b. Add the "clickable" class to the mat-cards in welcome.component.html
	
	
	When you are finished, your welcome.component.html should look like something like this:
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">

		  <div fxFlex fxLayout="row" fxLayoutGap="50px">

			<div fxFlex fxLayoutAlign="center center" fxLayoutGap="0" style="border: 1px solid black">
			  <!-- Left Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">
				Option 1
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid blue">
			  <!-- Center Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">
				Option 2
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="center center" style="border: 1px solid green">
			  <!-- Right Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">
				Option 3
			  </mat-card>
			</div>

		  </div>

		</div>


10. Add some content to the left card (so that the cards have different heights)
    a. Edit welcome.component.html
	
	b. Change the left card to this:
	      <!-- Left Card -->
		  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">

			<mat-card-title class="my-title">
			  <i class="fa fa-plus"></i> Company Applicant
			</mat-card-title>

			<mat-card-header class="border">Header is here
			</mat-card-header>

			<mat-card-content class="border">Content is here</mat-card-content>
			<mat-card-subtitle class="border">Sub title is here</mat-card-subtitle>
			<mat-card-footer>footer is here</mat-card-footer>
		  </mat-card>
	  
	 PROBLEM:  The left card is taller than the other cards.  It looks bad



11. Adjust the div around each card so they all have the *SAME* height for the case in which the cards have different heights
    a. Edit welcome.component.html
	
	b. Change the <div> tag for each card
	      fxLayoutAlign="start stretch"
	    
	   Why it works:
	      In fxLayoutAlign="<Alignment in Layout Direction (horizontal) >  <Alignment in Perpendicular Direction (vertical) >
		     fxLayoutAlign="start stretch" means that horizontally, start on the left
			                               means that vertically, stretch 
	
	   To learn more about fxLayoutAlign, see https://tburleson-layouts-demos.firebaseapp.com/#/docs
		  
		  
		  
	When finished, the welcome.component.html looks like this:
		<div style="margin-left: 50px; margin-right: 50px; margin-top: 20px">

		  <div fxFlex fxLayout="row" fxLayoutGap="50px">

			<div fxFlex fxLayoutAlign="start stretch"  fxLayoutGap="0" style="border: 1px solid black">
			  <!-- Left Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">

				<mat-card-title class="my-title">
				  <i class="fa fa-plus"></i> Company Applicant
				</mat-card-title>

				<mat-card-header class="border">Header is here
				</mat-card-header>

				<mat-card-content class="border">Content is here</mat-card-content>
				<mat-card-subtitle class="border">Sub title is here</mat-card-subtitle>
				<mat-card-footer>footer is here</mat-card-footer>
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="start stretch" style="border: 1px solid blue">
			  <!-- Center Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">
				Option 2
			  </mat-card>
			</div>



			<div fxFlex fxLayoutAlign="start stretch" style="border: 1px solid green">
			  <!-- Right Card -->
			  <mat-card class="mat-elevation-z0 clickable" hover-class="mat-elevation-z8">
				Option 3
			  </mat-card>
			</div>

		  </div>

		</div>


