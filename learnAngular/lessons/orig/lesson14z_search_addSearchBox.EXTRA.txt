Lesson:  Add a Search Box to the Web App's Header
-------------------------------------------------
Add a search box to the webapp's header
Running a search open's the search results page


Procedure
---------
 1. Change the search icon to show/hide a searchbox
    a. Edit the header.component.html
	
	b. Change this
		  <!-- Search Hourglass -->
		  <a class="button" (click)="toggleAppNavbar()">
			<i class="fa fa-search"></i>
		  </a>	
	
	   To this:
		 <div class="searchBoxWrapper fa-border">
			<!-- Search Box -->
			<input class="searchBox" type="text" matNativeControl placeholder="Search...." [(ngModel)]="rawQuery"  />

			<!-- Search Icon -->
			<span class="searchBoxIcon" (click)="toggleSearchBox()">
			  <i class="fa fa-search"></i>
			</span>
		 </div>
   
		  
 2. Add this to the header.component.css
    a. Edit header.component.css
	b. Add this to the end

		.searchBoxWrapper {
		  background-color: #f7f7f7;
		  border-radius: 4px;
		  border: 0;

		  /* Center the searchbox and the icon */
		  display: flex;
		  flex-direction: row;
		  align-items: center;
		}

		.searchBox {
		  width: 200px;
		  padding: 6px 0 6px 10px;
		  background-color: #f7f7f7;
		  border: 0px;
		  background-color: transparent;

		  /* Hide outline that appears when clicking in textbox */
		  outline: none;
		}

		.searchBoxIcon {
		  color: black;
		  padding: 6px 14px 6px 14px;
		  cursor: pointer;
		  border: 0px;
		  background-color: transparent;
		}

		.searchBoxIconReversed {
		  color: #f7f7f7;
		  padding: 6px 14px 6px 14px;
		  cursor: pointer;
		  border: 0px;
		  background-color: #444;
		}


	  
 
 3. Setup the searbox toggle
 
 
 
 
 
    unix> cd ~/intellijProjects/angularApp1
    unix> ng generate component searchbox

 2. Replace the searchbox.component.ts with this:

         import { Component, OnInit } from '@angular/core';

         @Component({
           selector: 'app-searchbox',
           templateUrl: './searchbox.component.html',
           styleUrls: ['./searchbox.component.css']
         })
         export class SearchboxComponent implements OnInit {
            public rawQuery: string;

           constructor() { }

           ngOnInit() {
             this.rawQuery = '';
           }

           search() {
               console.log('user pressed search.  rawQuery=' + this.rawQuery);
               this.lastSearchQuery = this.rawQuery;
           }
         }

 3. Replace the searchbox.component.html with this:

        <mat-card>
          <mat-card-content>
            <input style="width: 300px" type="text" matNativeControl placeholder="Search for...." [(ngModel)]="rawQuery"  />
            <button type="button" mat-raised-button (click)="search()">Search</button>
          </mat-card-content>
        </mat-card>

        <pre>
          rawQuery={{rawQuery}}
        </pre>

        <br/>




 4. Add the app-searchbox to the app.component.html
    Replace the existing app.component.html with this:

          <app-searchbox></app-searchbox>
          <app-form1></app-form1>










 3. Add a search icon next to the search box using font awesome
    -- The icon is <i class="fa fa-search">

        <mat-card >
          <mat-card-content>

            <!-- This outer div is used to center the search box within the larger div -->
            <div style="margin: auto; width: 200px">
              <div class="searchBox" style="width: 200px">
                <div class="search">

                  <!-- Search box.  Pressing enter causes search to be executed -->
                  <input type="text" class="searchTerm" placeholder="Search...."  [(ngModel)]="rawQuery" (keyup.enter)="search()">

                  <!-- Search Icon -->
                  <button type="submit" class="searchButton" (click)="search()">
                    <i class="fa fa-search"></i>
                  </button>
                </div>
              </div>
            </div>
          </mat-card-content>
        </mat-card>





 4. Add this to your style.css

        .searchBox .search {
          width: 100%;
          position: relative;
          display: flex;
        }

        .searchBox .searchTerm {
          width: 100%;
          border: 3px solid #00B4CC;
          border-right: none;
          padding: 3px;
          border-radius: 5px 0 0 5px;
          outline: none;
          color: #9DBFAF;
        }

        .searchBox .searchTerm:focus{
          color: #00B4CC;
        }

        .searchBox .searchButton {
          width: 40px;
          height: 40px;
          border: 1px solid #00B4CC;
          background: #00B4CC;
          text-align: center;
          color: #fff;
          border-radius: 0 5px 5px 0;
          cursor: pointer;
          font-size: 20px;
        }
