How To Secure a Route using a Page Guard
----------------------------------------
Problem:  I want to prevent users from navigating to certain pages
Solution: Use the Guard and implement CanActivate



Procedure
---------
 1. Create a "Forbidden" Page component with a "Forbidden Message:"
    a. Create the Forbidden Component
       unix> cd ~/intellijProjects/angularApp1/frontend
       unix> ng generate component forbidden
       
    b. Replace forbidden.component.html with this:
        You are not allowed to do this
        <br/>
        403 Forbidden

     
 2. Create the page guard and have it redirect the user to Forbidden if the user attempts to visit the "Add Report" page
    a. Create the PageGuard
       unix> cd ~/intellijProjects/angularApp1/frontend
       unix> ng generate guard guards/page --implements CanActivate

    b. Replace the page.guard.ts with this:
        import { Injectable } from '@angular/core';
        import {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';
        import { Observable } from 'rxjs';

        @Injectable({
          providedIn: 'root'
        })
        export class PageGuard implements CanActivate {

          constructor(private router: Router) {  }


          canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {
            // If the user is not allowed to get to this page, then redirct the user to a forbidden page
            this.router.navigate(['page/403']).then();

            // Return false so that the router will not route the user to the new page
            return false;
          }

        }

 

 3. Add the PageGuard to the route for 'page/addReport' *and* register the page/403 route
    a. Edit the app.module.ts
    b. Change the routes so that they have
      
       Change from this:
         { path: 'page/addReport',    component: AddReportComponent },
         
       To this:
	   	 { path: 'page/403',          component: ForbiddenComponent },  
         { path: 'page/addReport',    component: AddReportComponent, canActivate: [PageGuard] },        
	
 
 

 4. Try it out
    a. Activate the debugger for 'Full Webapp'
    b. Attempt to go to the "Add Report" page
       -- You should only see the 403 fobidden message
       
 
 
