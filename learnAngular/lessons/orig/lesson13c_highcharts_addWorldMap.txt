Lesson:  How to Add a World Map using HighCharts
------------------------------------------------

References
----------
https://www.highcharts.com/docs/maps/map-collection


Procedure
---------
 1. Use npm to install the Highcharts Map Collection
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> npm install @highcharts/map-collection
	
	You should see this line in your package.json
  		  "@highcharts/map-collection": "1.1.3",
		  
 2. Make sure the code still compiles
    unix> cd ~/intellijProjects/angularApp1
	unix> mvn clean package
	
 3. Create the chart2 page
    unix> cd ~/intellijProjects/angularApp1/frontend
	unix> ng generate component analytics/chart2

 4. Add a link to chart2 in the navigation bar
    a. Edit navbar.component.html
	b. Add this to it:
	    <!-- Chart 2 -->
        <mat-list-item class="navItem" [routerLink]="'page/chart2'" routerLinkActive="active">
          <a title="Chart 2">Chart 2</a>
          <div fxFlex fxLayoutAlign="end end">
            <a [routerLink]="'page/chart2'" target="_blank">
              <i class="fas fa-external-link-alt navItemIcon" title="Open Chart 2 in a new window"></i>
            </a>
          </div>
        </mat-list-item>
	
	When completed, the navbar.component.html should look something like this:
	  <div class="navbar" style="width:200px">
		<mat-nav-list style="margin-top: 0; padding-top: 0">

			<!-- Menu Group 1 -->
			<div class='navHeader clickable' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}"
				 (click)="toggleNavGroup(1)">
			  <i class="fa fa-file-alt navHeaderIcon"></i>
			  <span class="navHeaderTitle">Reports</span>
			</div>

			<!-- Menu Group 1 Items -->
			<div class='navGroup' [ngClass]="{'navGroupClosed': reportsNavGroupClosed == true}">

				<!-- View Reports -->
				<mat-list-item class="navItem" [routerLink]="'page/viewReports'" routerLinkActive="active">
				  <a title="View Reports">View Reports</a>
				  <div fxFlex fxLayoutAlign="end end">
					 <a [routerLink]="'page/viewReports'" target="_blank">
						<i class="fas fa-external-link-alt navItemIcon" title="Open View Reports in a new window"></i>
					</a>
				  </div>
				</mat-list-item>

				<!-- Add Report -->
				<mat-list-item class="navItem" [routerLink]="'page/addReport'" routerLinkActive="active">
				  <a title="Add Report">Add Report</a>
				  <div fxFlex fxLayoutAlign="end end">
					<a [routerLink]="'page/addReport'" target="_blank">
					  <i class="fas fa-external-link-alt navItemIcon" title="Open Add Report in a new window"></i>
					</a>
				  </div>
				</mat-list-item>

				<!-- Audit History -->
				<mat-list-item class="navItem" [routerLink]="'page/auditHistory'" routerLinkActive="active">
				  <a title="Audit History">Audit History</a>
				  <div fxFlex fxLayoutAlign="end end" >
					<a [routerLink]="'page/auditHistory'" target="_blank">
					  <i class="fas fa-external-link-alt navItemIcon" title="Open Audit History in a new window"></i>
					</a>
				  </div>
				</mat-list-item>

			  <!-- Upload Report -->
			  <mat-list-item class="navItem" [routerLink]="'page/uploadReport'" routerLinkActive="active">
				<a title="Upload Report">Upload Report</a>
				<div fxFlex fxLayoutAlign="end end" >
				  <a [routerLink]="'page/uploadReport'" target="_blank">
					<i class="fas fa-external-link-alt navItemIcon" title="Open Upload Reportin a new window"></i>
				  </a>
				</div>
			  </mat-list-item>

			</div>  <!-- End of Menu Group 1 Items -->



		  <!-- Menu Group 2 -->
		  <div class='navHeader clickable' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}"
			   (click)="toggleNavGroup(2)">
			<i class="fa fa-file-alt navHeaderIcon"></i>
			<span class="navHeaderTitle">Analytics</span>
		  </div>

		  <!-- Menu Group 2 Items -->
		  <div class='navGroup' [ngClass]="{'navGroupClosed': analyticsGroupClosed == true}">

			<!-- Chart 1 -->
			<mat-list-item class="navItem" [routerLink]="'page/chart1'" routerLinkActive="active" >
			  <a title="Chart 1">Chart 1</a>
			  <div fxFlex fxLayoutAlign="end end">
				<a [routerLink]="'page/chart1'" target="_blank">
				  <i class="fas fa-external-link-alt navItemIcon" title="Open Chart 1 in a new window"></i>
				</a>
			  </div>
			</mat-list-item>

			<!-- Chart 2 -->
			<mat-list-item class="navItem" [routerLink]="'page/chart2'" routerLinkActive="active">
			  <a title="Chart 2">Chart 2</a>
			  <div fxFlex fxLayoutAlign="end end">
				<a [routerLink]="'page/chart2'" target="_blank">
				  <i class="fas fa-external-link-alt navItemIcon" title="Open Chart 2 in a new window"></i>
				</a>
			  </div>
			</mat-list-item>

		  </div>  <!-- End of Menu Group 2 Items -->


		</mat-nav-list>
	  </div>


 5. Add chart2 to the routes  
    a. Edit app.module.ts
    b. Add this line to the Routes
          { path: 'page/chart2',  component: Chart2Component },
	
	
 6. Set chart.component.html so that it shows the map
    a. Edit chart2.component.html
	
	b. Replace its contents with this:
		<mat-card>
		  <mat-card-title>Chart 2</mat-card-title>

		  <mat-card-content>

			<!-- World Map -->
			<div id="worldMap1" style="width: 100%; height: 100%; display: block;"></div>

		  </mat-card-content>
		</mat-card>


 7. Set the chart2.component.ts to set the chart options and load the worldmap
    a. Edit chart2.component.ts
	
	b. Replace its contents with this:
		import {Component} from '@angular/core';
		import * as Highcharts from "highcharts";
		import MapModule from 'highcharts/modules/map';

		declare var require: any;
		const worldMap = require("@highcharts/map-collection/custom/world.geo.json");
		MapModule(Highcharts);


		@Component({
		  selector: 'app-chart2',
		  templateUrl: './chart2.component.html',
		  styleUrls: ['./chart2.component.css']
		})
		export class Chart2Component {

		  private Highcharts: typeof Highcharts = Highcharts;


		  ngOnInit(): void {

			// Populate and initialize worldMap1
			this.chartOptions.series[0].data = this.data1;
			this.Highcharts.mapChart('worldMap1', this.chartOptions);
		  }

		  private data1: any = [
			["fo", 0],
			["um", 1],
			["us", 2],
			["jp", 3],
			["sc", 4],
			["in", 5],
			["fr", 6],
			["fm", 7],
			["cn", 8],
			["pt", 9],
			["sw", 10],
			["sh", 11],
			["br", 12],
			["ki", 13],
			["ph", 14],
			["mx", 15],
			["es", 16],
			["bu", 17],
			["mv", 18],
			["sp", 19],
			["gb", 20],
			["gr", 21],
			["as", 22],
			["dk", 23],
			["gl", 24],
			["gu", 25],
			["mp", 26],
			["pr", 27],
			["vi", 28],
			["ca", 29],
			["st", 30],
			["cv", 31],
			["dm", 32],
			["nl", 33],
			["jm", 34],
			["ws", 35],
			["om", 36],
			["vc", 37],
			["tr", 38],
			["bd", 39],
			["lc", 40],
			["nr", 41],
			["no", 42],
			["kn", 43],
			["bh", 44],
			["to", 45],
			["fi", 46],
			["id", 47],
			["mu", 48],
			["se", 49],
			["tt", 50],
			["my", 51],
			["pa", 52],
			["pw", 53],
			["tv", 54],
			["mh", 55],
			["cl", 56],
			["th", 57],
			["gd", 58],
			["ee", 59],
			["ag", 60],
			["tw", 61],
			["bb", 62],
			["it", 63],
			["mt", 64],
			["vu", 65],
			["sg", 66],
			["cy", 67],
			["lk", 68],
			["km", 69],
			["fj", 70],
			["ru", 71],
			["va", 72],
			["sm", 73],
			["kz", 74],
			["az", 75],
			["tj", 76],
			["ls", 77],
			["uz", 78],
			["ma", 79],
			["co", 80],
			["tl", 81],
			["tz", 82],
			["ar", 83],
			["sa", 84],
			["pk", 85],
			["ye", 86],
			["ae", 87],
			["ke", 88],
			["pe", 89],
			["do", 90],
			["ht", 91],
			["pg", 92],
			["ao", 93],
			["kh", 94],
			["vn", 95],
			["mz", 96],
			["cr", 97],
			["bj", 98],
			["ng", 99],
			["ir", 100],
			["sv", 101],
			["sl", 102],
			["gw", 103],
			["hr", 104],
			["bz", 105],
			["za", 106],
			["cf", 107],
			["sd", 108],
			["cd", 109],
			["kw", 110],
			["de", 111],
			["be", 112],
			["ie", 113],
			["kp", 114],
			["kr", 115],
			["gy", 116],
			["hn", 117],
			["mm", 118],
			["ga", 119],
			["gq", 120],
			["ni", 121],
			["lv", 122],
			["ug", 123],
			["mw", 124],
			["am", 125],
			["sx", 126],
			["tm", 127],
			["zm", 128],
			["nc", 129],
			["mr", 130],
			["dz", 131],
			["lt", 132],
			["et", 133],
			["er", 134],
			["gh", 135],
			["si", 136],
			["gt", 137],
			["ba", 138],
			["jo", 139],
			["sy", 140],
			["mc", 141],
			["al", 142],
			["uy", 143],
			["cnm", 144],
			["mn", 145],
			["rw", 146],
			["so", 147],
			["bo", 148],
			["cm", 149],
			["cg", 150],
			["eh", 151],
			["rs", 152],
			["me", 153],
			["tg", 154],
			["la", 155],
			["af", 156],
			["ua", 157],
			["sk", 158],
			["jk", 159],
			["bg", 160],
			["qa", 161],
			["li", 162],
			["at", 163],
			["sz", 164],
			["hu", 165],
			["ro", 166],
			["ne", 167],
			["lu", 168],
			["ad", 169],
			["ci", 170],
			["lr", 171],
			["bn", 172],
			["iq", 173],
			["ge", 174],
			["gm", 175],
			["ch", 176],
			["td", 177],
			["kv", 178],
			["lb", 179],
			["dj", 180],
			["bi", 181],
			["sr", 182],
			["il", 183],
			["ml", 184],
			["sn", 185],
			["gn", 186],
			["zw", 187],
			["pl", 188],
			["mk", 189],
			["py", 190],
			["by", 191],
			["cz", 192],
			["bf", 193],
			["na", 194],
			["ly", 195],
			["tn", 196],
			["bt", 197],
			["md", 198],
			["ss", 199],
			["bw", 200],
			["bs", 201],
			["nz", 202],
			["cu", 203],
			["ec", 204],
			["au", 205],
			["ve", 206],
			["sb", 207],
			["mg", 208],
			["is", 209],
			["eg", 210],
			["kg", 211],
			["np", 212]
		  ];

		  private chartOptions: any = {
			chart: {
			  map: worldMap as any
			},
			title: {
			  text: "Highmaps basic demo"
			},
			credits: {
			  enabled: false        // Hide the highcharts.com label
			},
			subtitle: {
			  text:
				'Source map: <a href="http://code.highcharts.com/mapdata/custom/world.js">World, Miller projection, medium resolution</a>'
			},
			mapNavigation: {
			  enabled: true,
			  buttonOptions: {
				alignTo: "spacingBox"
			  }
			},
			legend: {
			  enabled: true
			},
			colorAxis: {
			  min: 0
			},
			series: [
			  {
				type: "map",
				name: "Random data",
				states: {
				  hover: {
					color: "#BADA55"
				  }
				},
				dataLabels: {
				  enabled: true,
				  format: "{point.name}"
				},
				allAreas: false,
				data: []
			  }
			]
		  };

		}

 
 8. Verify the map shows up
 

 9. Adjust the map so it takes the entire vertical part of the page (but does not use a vertical scrollbar ever)
    a. Edit chart2.component.html
	
	b. Add this div around the world map:
			<!-- Set the grid to use the entire height (except for 60px for header and 60px for the content above -->
			<div style="height: calc(100vh - 120px);">
				<!-- World Map -->
				<div id="worldMap1" style="width: 100%; height: 100%; display: block;"></div>
			</div>

    When finished, chart2.component.html looks like this:
		<mat-card>
		  <mat-card-title>Chart 2</mat-card-title>

		  <mat-card-content>

			<!-- Set the grid to use the entire height (except for 60px for header and 60px for the content above -->
			<div style="height: calc(100vh - 120px);">
				<!-- World Map -->
				<div id="worldMap1" style="width: 100%; height: 100%; display: block;"></div>
			</div>

		  </mat-card-content>
		</mat-card>


10. Verify that the map takes the entire height (w/o needing a scrollbar)
