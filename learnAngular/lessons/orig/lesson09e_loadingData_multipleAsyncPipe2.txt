Lesson:  Multiple Async Pipes (part 2)
--------------------------------------
Problem:  We have async pipes all over the add-report.component.html
Solution: Create a single variables that references all 3 async pipes

Procedure
---------
 1. Add an <ng-container> tag to the middle of the form that subscribes to *multiple* observables
      <!-- Subscribe to Multiple Observables -->
      <ng-container *ngIf="
       {
          report_sources: reportSourceObs | async,
          authors: authorsObs | async,
          priorities: prioritiesObs | async
       } as data;">
      
      
          <!-- Inside here, we have data.report_sources, data.priorities, and data.authors -->
          
      
      </ng-container>
      
 
 2. Within this new <ng-container>...</ng-container>, place the dropdown code
    NOTE:  We use data.report_sources 
            data.report_sources==false means that the report_sources are still loading
            data.report_sources==true  means that the report_sources are loaded
            
            data.priorities==false means that the priorites are still loading
            data.priorities==true  means that the priorities are loaded
            
            data.authors==false    means that the authors are still loading
            data.authors==trus     means that the authors are loaded
            
    <ng-container *ngIf="data.report_sources; else loadingReportSources">
        <mat-form-field style="margin-top: 20px">
            <mat-label>Choose Source</mat-label>

            <!-- Use the matNativeControl for select and input fields inside <mat-form-field>...</mat-form-field> tag -->
            <select matNativeControl formControlName="source">
                <option [value]=null>-Select Source-</option>
                <option *ngFor="let source of data.report_sources"  value="{{source.id}}">{{source.name}}</option>
            </select>
        </mat-form-field>
     </ng-container>
     <ng-template #loadingReportSources>
         <!-- Report Sources are loading message -->
         <p style="margin-top: 20px"><i class="fa fa-spin fa-spinner"></i> Loading Report Sources...</p>
     </ng-template>
     <br/>


     <ng-container *ngIf="data.priorities; else loadingPriorities">
          <!-- Priorities are fully loaded -->
          <mat-form-field style="margin-top: 20px">
            <mat-label>Choose Priority</mat-label>

            <!-- Priorities Drop Down -->
            <mat-select formControlName="priority">
              <mat-option [value]=null>-Select Priority-</mat-option>
              <mat-option *ngFor="let priority of data.priorities"  value="{{priority.id}}">{{priority.name}}</mat-option>
            </mat-select>

          </mat-form-field>
      </ng-container>

      <ng-template #loadingPriorities>
          <!-- Priorities are loading message -->
          <p style="margin-top: 20px"><i class="fa fa-spin fa-spinner"></i> Loading Priorities...</p>
      </ng-template>
      <br/>

      <ng-container *ngIf="data.authors; else loadingAuthors">
          <!-- Authors are loaded -->
          <mat-form-field style="margin-top: 20px">
              <mat-label>Choose Authors</mat-label>

              <mat-select multiple formControlName="authors">
                <mat-option *ngFor="let author of data.authors"  value="{{author.id}}">{{author.name}}</mat-option>
              </mat-select>
          </mat-form-field>
      </ng-container>
      <ng-template #loadingAuthors>
          <!-- Authors are loading message -->
          <p style="margin-top: 20px"><i class="fa fa-spin fa-spinner"></i> Loading Authors...</p>
      </ng-template>
      <br/>
 
 
 3. Verify that all dropdowns load after 5 seconds
    a. Pull Run -> Debug 'Full WebApp'
    b. Click on "Add Report"
    c. Look at the priorities dropdown
       -- You should see 3 spinners
       -- But, all 3 spinners should finish after 5 seconds
          because the loading is asynchronous
    
