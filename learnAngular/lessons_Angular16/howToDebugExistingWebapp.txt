How to Debug an Existing Spring Boot / Angular 16 Web App
---------------------------------------------------------
Problem:  I just cloned the spring boot / angular web app.  How do I debug it in IntelliJ?


Assumptions
-----------
 A) You have Intellij 2023 installed
 B) You have node 18.17.0 installed
 C) You have openJDK 17 installed
 D) You have maven 3.6 or later installed


Procedure
---------
 1. Startup IntelliJ and open the AngularApp16 project
    a. Press "Open"
    b. Browser to where the AngularApp16 project directory is

 2. Make sure the project is using openJDK 17 as its Java compiler
    a. Pull File -> Project Structure
    b. In the "Project" tab
       SDK:  Select your openJDK 17
       press OK

 3. Configure the node settings

    a. Pull File -> Settings
    b. Select Languages & Frameworks -> Node.js
    c. In the page
       Node Interpreter:  Make sure this is set to node 18.17.0
       If running on Windows, then configure node to be here:  c:\program files\nodejs    [or wherever it is set]
       If running on Unix,    then configure node to be here:  ~/.nvm/versions/node/v18.17.0/bin/node

       Package Manager    Make sure this is set to npm 9.6.7

       Why?  This is the version of NPM that will be used when you right-click on the package.json and run 'npm install'



 4. Right-click on you frontend/package.json -> "Run NPM Install"
    -- This will generate the node_modules/ directory


 5. Create this configuration:   "Backend (dev)"
    a. Find the main Application java class (that has the @SpringBootApplication annotation)
       1) Go to backend/src/main/java/com/lessons/Application

    b. Right-click on the Application.java -> Debug 'Application'
       NOTE:  This will create a debug option called 'Application'  [because that's the name of the class]

    c. Pull Run -> Stop 'Application'

    d. Pull Run -> Edit Configurations
       a. Single-click on "Application"
       b. On the right-side, select the Configuration tab
       c. Change the name to "Backend (dev)"
       d. Press Modify options -> Add VM Options
       e. type this in the VM options box:     -Dspring.profiles.active=dev
       e. Press OK


 6. Create this configuration:   "Angular CLI Server"
    a. Pull Run -> Edit Configurations
       Select +   -> NPM

       In the window on the right:
         Name:              Angular CLI Server
         Package.json:      ~/intellijProjects/angularApp1/frontend/package.json
         Command:           run
         Scripts:           start
         Arguments:
         Node interpreter:  ~/.nvm/versions/node/v18.17.0/bin/node          If running on Windows, then it may be this:   c:\program files\nodejs
         Node options:
         Package manager:   Project
         Environment

     b. Press Apply
     c. Press OK


 7. Create this configuration:   "Angular Application"
     a. Pull Run / Edit Configuration
        Select +   ->  JavaScript Debug

        In the window on the right:
          Name:           Angular Application
          URL:            http://localhost:4200
          Browser:        Chrome
          Check           "Ensure breakpoints are detected when loading scripts"

     b. Press Apply
     c. Press OK



 8. Setup the multirun plugin (so that you can debug the entire frontend/backend application with one click)
    a. Install the multirun plugin
       NOTE:  You will want to install Multirun v1.13

       1) Pull File -> Settings
       2) Click Plugins
       3) In the Plugins search box, type-in multirun
       4) Click the "install" button [on the right side]
       5) You will be prompted, "JetBrains is not responsible for any processing of your personal data by any third-party plugin vendors"
          Click Accept
       6) Restart IntelliJ

    b. Configure a MultiRun configuration to kick off the backend, the Angular CLI Server, *and* the Angular Application configurations
       1) Pull Run / Edit Configurations...

       2) Press +  ->  MultiRun

	   3) In the window on the right
             Name:  Full WebApp

             Under "Choose configurations to run",
               press +  Backend
               press +  Angular CLI Server
               press +  Angular Application

             Set the delay to 4 seconds

             Check    "Start configurations one by one"
             Uncheck  "Mark the tab of failed configuration"
             Uncheck  "Close tab of successfully completed configuraitons"
             Check    "Allow re-using tabs with succeeded run configurations"
             Check    "Allow re-using tabs with failed run configurations"


             NOTE:  Make sure the order is the same order as listed above
                    We want the backend to start *first*

        4) Press Apply
        5) Press OK

    c. Verify that it works
       1) Pull Run -> Debug 'Full Webapp'
       2) Press the "Debug" icon
          -- A chrome browser should appear connected to http://localhost:4200

    d. Pull Run / Stop MultiRun


WARNING!!!!
  In Windows, Chrome v111 update causes havoc with the Intellij Frontend Debugger
  Follow these steps to get it working with Chrome v111
      https://github.com/traderres/webClass/blob/master/learnIntellij/howToFixFrontEndDebuggingWithChrome.v111.txt

