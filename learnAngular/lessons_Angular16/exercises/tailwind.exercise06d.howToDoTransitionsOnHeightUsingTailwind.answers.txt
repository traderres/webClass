Exercise 6d / Smooth Vertical Transitions using only Tailwind (answers)
-----------------------------------------------------------------------
Problem:  Sometimes you want a div to appear or disappear with animation (going vertically)
Solution: Use Tailwind CSS to set the height from 0 back to its original height

NOTE:  In order for vertical animations to work, you need to have the ORIGINAL height of a div
       In this approach, you must set the height of the div (so it will be restored back to its original height)



Exercise
--------
 1. Setup the Page
    a. Generate the component:                Call it SmoothVerticalTransition2
    b. Add the route to constants.ts:         the route will be this:   page/smooth-vert-transition-2
    c. Register the route
    d. Add the route to the database table:  ui_controls        (if using real security)
    e. Add a link to the navbar (using that route)
    f. Use the debugger to verify that the navbar link works




 2. Setup this page layout

     +---------------------------------------------------------------+
     | Smooth Vertical Transition #2                            Help |
     +---------------------------------------------------------------+
     |                                                               |
     | <up arrow icon> BRKB Details       $420.52                    |
     |    Name:                           Berkshire Hathaway Inc     |
     |    Last Price:                     $420.52                    |
     |    Change:                         +6.05                      |
     |    Volume:                         635,986                    |
     |    52 Week Range:                  330.58 to 449.25           |
     |                                                               |
     | <up arrow icon> VOO Details        $481.13                    |
     |    Name:                           Vanguard S&P 500 ETF       |
     |    Last Price:                     $481.13                    |
     |    Change:                         +5.61                      |
     |    Volume:                         1,912,703                  |
     |    52 Week Range:                  375.95 to 519.40           |
     +---------------------------------------------------------------+
     NOTE: Use font awesome to get a nice down-arrow icon
           https://fontawesome.com/search


 3. Pressing on the up arrow icon should hide the details and show a "Down arrow icon"

     +---------------------------------------------------------------+
     | Smooth Vertical Transition #2                            Help |
     +---------------------------------------------------------------+
     |                                                               |
     | <up arrow icon> BRKB Details       $420.52                    |
     | <up arrow icon> VOO Details        $481.13                    |
     |    Name:                           Vanguard S&P 500 ETF       |
     |    Last Price:                     $481.13                    |
     |    Change:                         +5.61                      |
     |    Volume:                         1,912,703                  |
     |    52 Week Range:                  375.95 to 519.40           |
     +---------------------------------------------------------------+



 4. Update the SCSS file

	a. Define a CSS class:  show-content
	   -- This has a duration of 250 milliseconds
	   -- This has transition-all
	   -- This has ease-in-out

			.show-content {
			  @apply transition-all ease-in-out duration-[250ms] opacity-100;
			}

			*OR*

			.show-content {
			  transition: all 0.250s ease-in-out;      /* Causes the height to adjust over 250 milliseconds */
			  opacity: 100;
			}



	b. Define a CSS class:  hide-content
		-- This has a duration of 250 milliseconds
		-- This has a transition-all
		-- This has ease-in-out
		-- This has a height of zero
		-- This has overflow hidden  (which causes it to disappear)

			.hide-content {
			  /* Set the height to zero.  The overflow-hidden ensures that it really disappears */
			  @apply transition-all ease-in-out duration-[250ms] h-0 overflow-hidden opacity-0;
			}

			*OR*

			.hide-content {
              transition: all 0.250s ease-in-out;      /* Causes the height to adjust over 250 milliseconds */
              height: 0;                               /* Set the height to zero */
              overflow: hidden;
              opacity: 0;
            }







 5. In the typescript, add a class variable and a method to flip it:

 	a. Create a public class variable that:  isDivCollapsed
 	   -- if the div is collapsed, then it holds true
 	   -- if the div is expanded,  then it holds false
			public isDivCollapsed: boolean = false;


	b. Create a method called toggleDiv() that flips the flag

		  public toggleDiv(): void {
			this.isDivCollapsed = !this.isDivCollapsed;
		  }



 6. In the HTML

    a. Put a wrapper div around the BERKSHIRE HATHAWAY details that you want to *HIDE*
       And, set the height to whatever you need -- e.g., 100px


       NOTE:  We are only focusing on the *FIRST* down arrow for now

		  	<!-- Berkshire Details -->
		  	<!-- NOTE:  You must set the height or the animations will not work -->
			<div class="h-[100px]"


			</div>


	b. If the class variable holds true, then apply the 'show-content' CSS class
	   If the class variable holds false, then apply the 'hide-content' CSS class

    		<!-- Berkshire Details -->
    		<div class="h-[100px]"
                  [ngClass]="{ 'show-content': !this.isDivCollapsed,
    	                       'hide-content':  this.isDivCollapsed}">


    	    </div>


   	c. Have the up and down arrow icons call this.toggleDiv()
   	   -- Show the up/down arrow based on whether the class variable holds true/false


   	        <a [routerLink]=[] (click)="this.toggleDiv()"  *ngIf="!this.isDivCollapsed">
              <!-- Both the UP arrow and company name are clickable -->
              <i class="fa-solid fa-chevrons-up cursor-pointer"></i>
              BRKB Details
            </a>

            <a [routerLink]=[] (click)="this.toggleDiv()"  *ngIf="this.isDivCollapsed">
              <!-- Both the DOWN arrow and company name are clickable -->
              <i class="fa-solid fa-chevrons-down cursor-pointer"></i>
              BRKB Details
            </a>


            *OR*


			<a [routerLink]=[] (click)="this.toggleDiv()">
			  <!-- Both the UP arrow and company name are clickable          -->
			  <!-- NOTE:  Rotate the icon 180 degrees so it shows up or down -->
			  <i class="fa-solid fa-chevrons-down cursor-pointer"
				 [ngClass]="{ 'fa-rotate-180': !this.isDivCollapsed }"></i>
				 BRKB Details
			</a>


            *OR*


			<a [routerLink]=[] (click)="this.toggleDiv()">
			  <!-- Both the UP arrow and company name are clickable          -->
			  <!-- NOTE:  Rotate the icon 180 degrees so it shows up or down -->
			  	<i class="fa-solid fa-chevrons-down cursor-pointer *ngIf="this.isDivCollapsed"></i>
			  	<i class="fa-solid fa-chevrons-up cursor-pointer   *ngIf="!this.isDivCollapsed"></i>
			   BRKB Details
			</a>


