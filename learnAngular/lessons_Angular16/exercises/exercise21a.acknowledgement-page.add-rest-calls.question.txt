Exercise 21a / Acknowledgement Page / Add 2 REST Calls
------------------------------------------------------
Create the 2 REST calls to set the acknowledgement date and to see if the user has pressed "Acknowledge" in the last 24 hours




Part 1:  Build REST Call Contract for Setting the acknowledgement date to now
-----------------------------------------------------------------------------
 1. Determine the contract
  	a. What is the URL?								/api/acknowledge/set
  	   Rule:  Must start with /api

  	b. What is the URL Type?						PUT
  			GET			Used for read-only operations
  			PUT			Used for write operations and passing-in 1 parameter on the URL
  			POST   		Used for write operations and passing-in multiple parameters [no limit]
  			DELETE		Used for write operations involving deletes

  	c. What is passed-in?							Nothing
		-- backend can ALWAYS get the logged-in userid / you have a session
		-- backend can ALWAYS get the current time

  	d. What is returned?							Nothing / of course we return a 200 status code

  	e. What checks are made on the passed-in data?	Nothing

  	f. What security roles are granted access to this REST call?
													All of them!!!!   All 4!!!

  	g. What does this REST call do?
		1) Get the current logged-in userid
		2) Run some SQL to update the acknowledgement date to now
		3) Return an 200 status code





 2. Implement the contract / FUN PART!!!  / Write some Java code
	a. Turn on the stereo really loud

	b. Add acknowledgement_date to the Database

		1) Add acknowledgement_date to the USERS table
			-- Modify the flyway scripts
			-- Change how the "create table users....."
			-- Add the OPTIONAL column called acknowledgement_date
			-- The database type is			  timestamp with time zone    *OR*   timestampz


		2) Add acknowledgement_date to the USERS_AUD table

		3) Nuke your database

		4) Refresh your Database Console

		5) Verify that you see the column


	c. Create the backend Service:  AcknowledgementService
		1) Add the @Service annotation

		2) Add a public method:      setAcknowledgementDate()
			-- What's passed-in?  Look at your contract
			-- What's returned?	  Look at your contract

		3) Figure out the SQL in your database console

		4) Run the SQL in your database console



	d. Create the Controller
		1) Add the @Controller annotation

		2) Add your logger

		3) Inject your AcknowledgementService

		4) Create a public method that is your REST call
			-- this method uses your service


 3. Verify the contract works using Postman




 REST Call Contract for getting if acknowledgement date is within the last 24 hours
 -----------------------------------------------------------------------------------
 1. Determine the contract
  	a. What is the URL?
  	   Rule:  Must start with /api							 /api/acknowledge/get

  	b. What is the URL Type?								GET
  			GET			Used for read-only operations
  			PUT			Used for write operations and passing-in 1 parameter on the URL
  			POST   		Used for write operations and passing-in multiple parameters [no limit]
  			DELETE		Used for write operations involving deletes

  	c. What is passed-in?									nothing

  	d. What is returned?									DTO that returns true/false
		DANGER BATMAN!!!

  	e. What checks are made on the passed-in data?			None

  	f. What security roles are granted access to this REST call?
															All 4 of them

  	g. What does this REST call do?
		1) Run some SQL to see if it was acknowledged in the last 24 hours

		2) if null, then create a DTO returns false

		3) if there is a date, then do some logic to see if it returned in the last 24 hours
			-- It might create a DTO that holds true
			-- it might create a DTO that holds false

		4) Return the DTO and the 200 status code




 2. Implement the contract
	a.

	b.

	c.

	d.

	e.

	f.


 3. Verify the contract works using Postman

