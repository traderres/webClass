Boring Lecture / How to use the httpClient to setup an observable linked to a REST call
---------------------------------------------------------------------------------------


Sample Method for a GET Rest Call
---------------------------------
  public getReportCommentDetails(aReportCommentId: number): Observable<GetReportCommentDetailsDto> {
    // Construct the URL of the REST call
    const restUrl: string = environment.baseUrl + '/api/report-comments/details/' + aReportCommentId;

	// Return an observable that (when invoked) returns a GetReportCommentDetailsDto object
    return this.httpClient.get <GetReportCommentDetailsDto> (restUrl);
  }


Sample Method for a GET Rest Call with request params
-----------------------------------------------------
  public runCageCodeSearch(aRawSearchQuery: string, aTotalMatchesToReturn: number): Observable<CageCodeAutoCompleteMatchDTO[]> {
    const restUrl: string = environment.baseUrl + '/api/temp-cage-codes/search';

	// Create an object that holds the REST call parameters
    let restCallParams = {
      totalMatchesToReturn  : aTotalMatchesToReturn,
      rawSearchQuery        : aRawSearchQuery
    };

	// Return an observable that (when invoked) returns an array of DTOs
    return this.httpClient.get <CageCodeAutoCompleteMatchDTO[]> (restUrl, {  params: restCallParams  });
  }


Sample Method for a PUT Rest Call
---------------------------------
  public toggleSraForCaseId(aCaseId: number): Observable<string> {
    // Construct the URL to get the data to load all the Notes for a specific case ID
    const restUrl: string = environment.baseUrl + '/api/sra/toggle/' + aCaseId;

	// Return an observable that (when invoked) returns a string
    return this.httpClient.put (restUrl, {}, {responseType: 'text'});
  }


Sample Method for a POST Rest Call
----------------------------------
  // USAGE #1:  Return an Observable holding void
  public addReportComment(aAddReportCommentDTO: AddReportCommentDTO): Observable<void> {
    // Construct the URL to get the data to load all the Report Comments for a specific case ID
    const restUrl: string = environment.baseUrl + '/api/report-comments/add';

    // Return an observable that (when invoked) returns nothing
    return this.httpClient.post <void> (restUrl, aAddReportCommentDTO);
  }

  // USAGE #2  Return an Observable holding string
  public addReportComment(aAddReportCommentDTO: AddReportCommentDTO): Observable<string> {
    const restUrl: string = environment.baseUrl + '/api/report-comments/add';

    return this.httpClient.post <string> (restUrl, aAddReportCommentDTO);
  }

  // USAGE #3  Return an Observable holding string
  public addReportComment(aAddReportCommentDTO: AddReportCommentDTO): Observable<string> {
    const restUrl: string = environment.baseUrl + '/api/report-comments/add';

    return this.httpClient.post(restUrl, aAddReportCommentDTO, {responseType:'text'});
  }



Sample Method for a DELETE Rest Call
------------------------------------
  public deleteReportComment(reportCommentId: number): Observable<string> {
    // Construct the URL to get the data to load the Report Comment
    const restUrl: string = environment.baseUrl + '/api/report-comments/delete/' + reportCommentId;

    // Return an observable that (when invoked) returns a string
    return this.httpClient.delete<string>(restUrl);
  }
