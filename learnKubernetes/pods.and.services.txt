Pods and Services
-----------------

Pods are ephermal
-- A pod may disappear at any time  (because the nod it's running on has failed / because someone deleted the pod / because pod was evicted)
-- Missing pods are replaced with a new one
-- New pods get a different IP address from the pod it's replacing




Service
-------
Services solve the problem of ever-changing IP addresses as well as exposing multiple pods to a single constant IP and port pair
-- When a service is created, it gets a static IP (which never changes during the lifetime of the service)
-- Service represents a STATIC location for a group of one or more pods


     Client --> Service --> Pod 1   10.10.1.2
                        --> Pod 2   10.10.1.2
                        --> Pod 3   10.10.1.3

 -- The service makes sure one of the pods received the connection (regardless of its IP address)




Working with Pods
-----------------
 1. Create the yaml file
    unix> vi kubia-manual.yaml

apiVersion: v1
kind: Pod
metadata:
  name: kubia-manual
spec:
  containers:
  - image: traderres/my-public-repo:kubia-1.0         <-- This is from my public repo
    imagePullPolicy: IfNotPresent
    name: kubia
    ports:
    - containerPort: 8080
      protocol: TCP



 2. Create the resource (a pod in this case)
    unix> kubectl create -f kubia-manual.yaml

 3. Get all of the details
    unix> kubectl get po kubia-manual -o yaml

 4. Get the status of the pod
    unix> kubectl get pods

	NAME           READY   STATUS    RESTARTS      AGE
	kubia          1/1     Running   1 (25m ago)   21h
	kubia-manual   1/1     Running   0             18s         <-- Here is the new pod

 5. View the container logs
    unix> kubectl logs kubia-manual               # Get the log from the pod called kubia-manual)
    unix> kubectl logs kubia-manual -c kubia      # Get the log from the container kubia (inside the pod kubia-manual)

				 +------------------------------+
				 | pod  (kubia-manual)          |
				 | (listening on port 8080)     |
				 |                              |
				 |   +---------------------+    |
				 |   | container (kubia)   |    |
				 |   |                     |    |
				 |   +---------------------+    |
				 |                              |
				 +------------------------------+



 6. Configure port forwarding on the pod  (without using a service)
    unix> kubectl port-forward kubia-manual 8888:8080

    You will see the following:
    	Forwarding from 127.0.0.1:8888 -> 8080
    	Forwarding from [::1]:8888 -> 8080


				 +-------------------------------
				 | Connect to localhost:8888    |
                 +------------------------------+
                              |
                              V
				 +------------------------------+
				 |  Port Forwarder              |
				 |  (listen on port 8888)       |
				 |  (forward to port 8080)      |
				 +------------------------------+
                              |
                              V
				 +------------------------------+
				 | pod  (kubia-manual)          |
				 | (listening on port 8080)     |
				 |                              |
				 |   +---------------------+    |
				 |   | container (kubia)   |    |
				 |   |                     |    |
				 |   +---------------------+    |
				 |                              |
				 +------------------------------+


 7. Verify you can connect to your pod using localhost:8888
    unix> curl localhost:8888

    You should see the following:
    	You've hit kubia-manual



Delete a pod
-------------
unix> kubectl delete -n default pod kubia-manual

