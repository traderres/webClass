How to Install MiniKube on Rocky 9
-----------------------------------
minikube is local Kubernetes


References
----------
https://minikube.sigs.k8s.io/docs/start/
https://minikube.sigs.k8s.io/docs/handbook/                # MiniKube Handbook


Procedure
---------
 1. Download minikube RPM
    a. Go to https://minikube.sigs.k8s.io/docs/start/
    b. Select
    	Operating System:  Linux
    	Architecture:      x86-64
    	Release Type:      Stable
    	Installer Type:    RPM Package

	 *OR*


    #
    # NOTE:  This link below refers to the latest minikube found in
    #              https://github.com/kubernetes/minikube/releases/tag
	unix> cd /tmp
	unix> curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm

 2. Install the RPM
 	unix> sudo dnf localinstall /tmp/minikube-latest.x86_64.rpm


 3. Startup minikube
    unix> minikube start   # do not run as root

    You should see this:
	😄  minikube v1.34.0 on Rocky 9.4
	✨  Automatically selected the docker driver. Other choices: ssh, none
	📌  Using Docker driver with root privileges
	👍  Starting "minikube" primary control-plane node in "minikube" cluster
	🚜  Pulling base image v0.0.45 ...
	💾  Downloading Kubernetes v1.31.0 preload ...
		> preloaded-images-k8s-v18-v1...:  326.69 MiB / 326.69 MiB  100.00% 72.88 M
		> gcr.io/k8s-minikube/kicbase...:  487.90 MiB / 487.90 MiB  100.00% 61.14 M
	🔥  Creating docker container (CPUs=2, Memory=7800MB) ...
	❗  Failing to connect to https://registry.k8s.io/ from inside the minikube container
	💡  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
	🐳  Preparing Kubernetes v1.31.0 on Docker 27.2.0 ...
		▪ Generating certificates and keys ...
		▪ Booting up control plane ...
		▪ Configuring RBAC rules ...
	🔗  Configuring bridge CNI (Container Networking Interface) ...
	🔎  Verifying Kubernetes components...
		▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
	🌟  Enabled addons: storage-provisioner, default-storageclass
	💡  kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
	🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


 4. Install kubectl
    unix> minikube kubectl -- get po -A

	NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
	kube-system   coredns-6f6b679f8f-lwp7p           0/1     Running   0          14s
	kube-system   etcd-minikube                      1/1     Running   0          20s
	kube-system   kube-apiserver-minikube            1/1     Running   0          20s
	kube-system   kube-controller-manager-minikube   1/1     Running   0          20s
	kube-system   kube-proxy-6wt2s                   1/1     Running   0          15s
	kube-system   kube-scheduler-minikube            1/1     Running   0          20s
	kube-system   storage-provisioner                1/1     Running   0          19s


 5. Add this alias to your .bashrc
    unix> vi ~/.bashrc

	    # Set an alias for kubectl
    	alias kubectl="minikube kubectl --"


 6. Open a new shell and verify it works
    unix> kubectl version

	You should see the following:
		Client Version: v1.31.0
		Kustomize Version: v5.4.2
		Server Version: v1.31.0



 7. Open up the minikube dashboard
    unix> minikube dashboard

    NOTE:  This will attempt to open this page:
                http://127.0.0.1:45337/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/workloads?namespace=default


 8. Get cluster info
    unix> kubectl cluster-info

    You should see this:
	    Kubernetes control plane is running at https://192.168.49.2:8443
    	CoreDNS is running at https://192.168.49.2:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

    To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

 9. Display info
    unix> kubectl get all

    You should see this:
    	NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
    	service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   11m

