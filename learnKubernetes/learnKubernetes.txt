Learn Kubernetes
----------------



Containers run inside pods
-- You manage the Pods
-- Pods manage the container

        +--------------------+
        |  Pod 1             |
        |                    |
        |  container 1       |
        +--------------------+
                  |
        +--------------------+
        | kubernetes network |
        +--------------------+


Chapter 2 Lessons
------------------
 1. kubectl is a powerful tool
 2. Kubernetes does NOT run containers
    -- The containerID in the pod is a reference to another system that runs containers -- e.g., docker, containerd, rkt

 3. Pods are allocated to one node when they're created
    -- It's the node's responsibility to manage the Pod and its containers
    -- It does that by working with the container runtime uknown a known API called the Container Runtime Interface (CRI)
    -- The CRI lets the node manage containers in the same way for all different container runtimes

    -- So, all kubernetes environments use the **SAME** container runtime environment mechanism to manage containers
       But, not all container runtimes allow you to access containers outside of kubernetes

 4. Pods are a primitive resource / in normal use, you'd never run a pod directly


 5. Controller is a Kubernetes resource that manages other resources
    -- Kubernetes has many controllers, but the main one for managing pods is the Deployment
    -- If a node goes offline and you lose a Pod, the Deployment creates a replacement Pod on another node
    -- If you need to scale your pods, the Deployment runs them across many nodes

 6. Deployment controllers manage pods and Pods manage containers
    -- Deployment create pod
    -- Deployment is a controller that checks with the Kubernetres API to see which resources are running,
       realizes the pod it should be managing doesn't exist, and uses the Kubernetes API to create it



Handy
-----
 1. Get the labels for a deployment
    unix> kubectl get deploy hello-kiamol-2 -o jsonpath='{.spec.template.metadata.labels}'
    {"app":"hello-kiamol-2"}

 2. List all pods that are used by that deployment
    unix> kubectl get pods -l app=hello-kiamol-2