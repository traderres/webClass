How to Add Missing Foreign Keys to Postgres
-------------------------------------------
Problem:



Solution
--------
 1. Run this SQL query to find the missing foreign keys

		 SELECT c.conrelid::regclass AS "table",
			 /* list of key column names in order */
				string_agg(a.attname, ',' ORDER BY x.n) AS columns,
				pg_catalog.pg_size_pretty(
						pg_catalog.pg_relation_size(c.conrelid)
					) AS size,
				c.conname AS constraint,
				c.confrelid::regclass AS referenced_table
		 FROM pg_catalog.pg_constraint c
				  /* enumerated key column numbers per foreign key */
				  CROSS JOIN LATERAL
			 unnest(c.conkey) WITH ORDINALITY AS x(attnum, n)
			 /* name for each key column */
				  JOIN pg_catalog.pg_attribute a
					   ON a.attnum = x.attnum
						   AND a.attrelid = c.conrelid
		 WHERE NOT EXISTS
			 /* is there a matching index for the constraint? */
			 (SELECT 1 FROM pg_catalog.pg_index i
			  WHERE i.indrelid = c.conrelid
				  /* it must not be a partial index */
				AND i.indpred IS NULL
				  /* the first index columns must be the same as the
					 key columns, but order doesn't matter */
				AND (i.indkey::smallint[])[0:cardinality(c.conkey)-1]
				  OPERATOR(pg_catalog.@>) c.conkey)
		   AND c.contype = 'f'
		 GROUP BY c.conrelid, c.conname, c.confrelid
		 ORDER BY 1;



 2. Use the output to identify the missing foreign keys

    If the output returns this:

    Table 	columns				size			constraint 			reference_table
	tickets assigned_userid		8192 bytes 		t_assigned_userid	users
	tickets classification_id	8192 bytes		t_classification	classification


 3. Add the indexes
			create index on tickets(assigned_userid);
			create index on tickets(classification_id);

 4. After adding the indexes, re-run the above query
    -- And, you should see *FEWER* records as the misisng indexes are added

