


Common Fixes to Resolve SonarQube Issues
----------------------------------------
 1. Create a MyRuntimeException class:

		Package com.example.exceptions

		 /**
		  * Ths MyRuntimeException extends the RuntimeException class to avoid sonarqube errors
		  */
		 public class MyRuntimeException extends RuntimeException {

			 /**
			  * Default Constructor
			  */
			 public MyRuntimeException() {
			 }

			 /**
			  * @param message holds the passed-in message
			  */
			 public MyRuntimeException(String message) {
				 super(message);
			 }

			 /**
			  * @param message holds the passed-in message
			  * @param cause holds the passed-in throwable object
			  */
			 public MyRuntimeException(String message, Throwable cause) {
				 super(message, cause);
			 }

			 /**
			  * @param cause holds the passed-in throwable object
			  */
			 public MyRuntimeException(Throwable cause) {
				 super(cause);
			 }

			 /**
			  * @param message holds the passed-in message
			  * @param cause holds the passed-in throwable object
			  * @param enableSuppression holds a boolean to enable suppression
			  * @param writableStackTrace holds a boolean for the writableStackTrace
			  */
			 public MyRuntimeException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
				 super(message, cause, enableSuppression, writableStackTrace);
			 }
		 }

 2. Change your code to throw MyRuntimeException (instead of RuntimeException)

		Change this:
			if (something == null) {
				throw new RuntimeException("This should never happen");
			}

		To this:
			if (something == null) {
				throw new MyRuntimeException("This should never happen");
			}


 3. Remove unused loggers

 4. Added javadocs

 5. Change bind variable names *AND* paramMap param keys

    from this:
     	String sql = "insert into table(userid) values ( :userid) ";
        paramMap.put("userid", 27);

    To this
        paramMap.put("p1_userid", 27);
     	String sql = "insert into table(userid) values ( :p1_userid) ";




 6. Don't pass-in 7 arguments into a method
    -- Instead, pass-in a DTO


 7. Remove usage of generic wildcard type

    Change this:
        public ResponseEntity<?> getAllFileTypes()

    To this:
        public ResponseEntity<Object> getAllFileTypes()



 8. Constructors should not take a zillion arguments
    -- Instead use a builder class
	-- See How to make the java Builder Class
       https://github.com/traderres/webClass/blob/master/learnJava/howToMakeBuilderClass.txt


 9. TransactionTemplates may need a more sophisticated try/catch block
		try {


		}
		catch (InterruptedException e) {
			Thread.currentThread().interrupt();
			throw new MyRuntimeException("Thread was interrupted", e);
		}
		catch (Exception e) {
			MyRuntimeException re = new MyRuntimeException(e);
			re.setStackTrace(e.getStackTrace() );
			throw re;
		}


