How to Use Jasypt to Encode/Decode properties in your Springboot App
--------------------------------------------------------------------


Part 1:  Approach 1 to Get the Encoded String  (using the jasypt JAR)
---------------------------------------------------------------------
 1. Download jasypt command line tools to your ~/Downloads/
    https://github.com/jasypt/jasypt/releases/download/jasypt-1.9.3/jasypt-1.9.3-dist.zip

 2. Unzip it to a directory
    unix> cd ~/Downloads
    unix> unzip jasypt-1.9.3-dist.zip

 3. Erase icu4j-3.4.4.jar from the jasypt-1.9.3/lib directory
    NOTE:  This fixes a problem with jasypt not initializing properly with openJdk
    unix> rm jasypt-1.9.3/lib/icu4j-3.4.4.jar

 4. Use the encoding password generate an encoded password
    unix> cd jasypt-1.9.3/bin
    unix> chmod ugo+x *.sh
    unix> export PLAINTEXT_PASSWORD='test'                        # Holds the plain-text password
    unix> export SALT_STRING='ab5823423464j1k2#!!6298-+'          # Holds the salt string
    unix> ./encrypt.sh  input=$PLAINTEXT_PASSWORD  password=$SALT_STRING  algorithm=PBEWithMD5AndDES

      ----OUTPUT----------------------
      B+YuYfglKHSwOfwusP+TYB1WciC0iCGy4Rb9hjuMv+o=



    On Windows
    -----------
    WARNING:  Windows users might have problems with > and < characters in the salt string so don't use them

    dos> cd jasypt-1.9.3/bin
    dos> set PLAINTEXT_PASSWORD=test
    dos> set SALT_STRING=ab5823423464j1k2#!!6298-+
    dos> encrypt.bat input=%PLAINTEXT_PASSWORD%  password=%SALT_STRING%  algorithm=PBEWithMD5AndDES


**OR**

Part 1:  Approach 2 to get the Encoded String  (using the jasypt-maven-plugin)
------------------------------------------------------------------------------
 1. Add the jasypt maven plugin to your pom.xml
             <plugin>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-maven-plugin</artifactId>
                <version>3.0.2</version>
            </plugin>


 2. Use the maven plugin to encrypt your string
    unix> export PLAINTEXT_PASSWORD='test'                        # Holds the plain-text password
    unix> export SALT_STRING='ab5823423464j1k2#!!6298-+'          # Holds the salt string
    unix> mvn jasypt:encrypt-value -Djasypt.encryptor.password="${SALT_STRING}"   \
                                   -Djasypt.plugin.value="${PLAINTEXT_PASSWORD}"  \
				   -Djasypt.encryptor.algorithm=PBEWithMD5AndDES  \
				   -Djasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator

    -- Copy the string that starts with ENC(...)




Part 2:  Set the Encoded String within your application.yaml
------------------------------------------------------------
WARNING:  It must have the same SALT_STRING, same algorithm
 1. Set the encoded password (within your application.yaml)
    password: ENC(B+YuYfglKHSwOfwusP+TYB1WciC0iCGy4Rb9hjuMv+o=)


 2. Set the salt string (within your application.yaml)
	jasypt:
	       encryptor:
			algorithm: PBEWithMD5AndDES
			password: 'ab5823423464j1k2#!!6298-+'
			iv-generator-classname: org.jasypt.iv.NoIvGenerator

 3. Make sure your springboot has the jasypt dependency
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>1.17</version>
        </dependency>
